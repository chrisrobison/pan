{
  "version": 3,
  "sources": ["../../pan/core/pan-client.mjs"],
  "sourcesContent": ["// Minimal PanClient ESM helper for PAN (Page Area Network)\n// Usage:\n//   import { PanClient } from './pan-client.mjs';\n//   const pc = new PanClient(myElement);\n//   pc.publish({ topic:'demo.click', data:{...} });\n//   const off = pc.subscribe('demo.*', m => { ... });\n\nexport class PanClient {\n  /**\n   * @param {HTMLElement|Document} host\n   * @param {string} busSelector css selector for the bus element (unused, for compatibility)\n   */\n  constructor(host = document, busSelector = 'pan-bus') {\n    this.host = host;\n    this.bus = /** @type {HTMLElement|null} */(document.querySelector(busSelector));\n    if (!this.bus) {\n      // Do not throw to allow late bus; ready() will resolve on pan:sys.ready\n    }\n    const tag = host instanceof HTMLElement ? host.tagName.toLowerCase() + (host.id ? ('#' + host.id) : '') : 'doc';\n    this.clientId = `${tag}#${Math.random().toString(36).slice(2, 8)}`;\n    this._ready = new Promise((res) => {\n      const onReady = () => { document.removeEventListener('pan:sys.ready', onReady, true); res(); };\n      if (globalThis.window && window.__panReady) return res();\n      document.addEventListener('pan:sys.ready', onReady, true);\n    }).then(() => {\n      this._dispatch('pan:hello', { id: this.clientId, caps: ['client'] });\n    });\n  }\n\n  ready() { return this._ready; }\n\n  /** @param {string} type @param {any} detail */\n  _dispatch(type, detail) {\n    this.host.dispatchEvent(new CustomEvent(type, { detail, bubbles: true, composed: true }));\n  }\n\n  /**\n   * Publish a message\n   * @param {{topic:string,data:any,id?:string,ts?:number,replyTo?:string,correlationId?:string,retain?:boolean,headers?:Record<string,string>}} msg\n   */\n  publish(msg) { this._dispatch('pan:publish', msg); }\n\n  /**\n   * Subscribe to one or more topics. Returns an unsubscribe function.\n   * @param {string|string[]} topics\n   * @param {(m:any)=>void} handler\n   * @param {{ retained?: boolean, signal?: AbortSignal }=} opts\n   */\n  subscribe(topics, handler, opts = {}) {\n    topics = Array.isArray(topics) ? topics : [topics];\n    const onDeliver = (ev) => {\n      const m = ev.detail; if (!m || !m.topic) return;\n      if (topics.some((t) => PanClient.matches(m.topic, t))) handler(m);\n    };\n    this.host.addEventListener('pan:deliver', onDeliver);\n    this._dispatch('pan:subscribe', { clientId: this.clientId, topics, options: { retained: !!opts.retained } });\n    const off = () => {\n      this.host.removeEventListener('pan:deliver', onDeliver);\n      this._dispatch('pan:unsubscribe', { clientId: this.clientId, topics });\n    };\n    if (opts.signal) {\n      const onAbort = () => { off(); opts.signal?.removeEventListener('abort', onAbort); };\n      opts.signal.addEventListener('abort', onAbort, { once: true });\n    }\n    return off;\n  }\n\n  /**\n   * Request/Reply convenience helper. Resolves with the reply message.\n   * @param {string} topic\n   * @param {any} data\n   * @param {{ timeoutMs?: number }=} options\n   */\n  request(topic, data, { timeoutMs = 5000 } = {}) {\n    const correlationId = crypto.randomUUID();\n    const replyTo = `pan:$reply:${this.clientId}:${correlationId}`;\n    return new Promise((resolve, reject) => {\n      const off = this.subscribe(replyTo, (m) => {\n        clearTimeout(timer);\n        off();\n        resolve(m);\n      });\n      const timer = setTimeout(() => { off(); reject(new Error('PAN request timeout')); }, timeoutMs);\n      this.publish({ topic, data, replyTo, correlationId });\n    });\n  }\n\n  /** topic pattern matcher: supports '*', segment wildcards (foo.*, *.bar, foo.*.baz) */\n  static matches(topic, pattern) {\n    if (pattern === '*' || topic === pattern) return true;\n    if (pattern && pattern.includes('*')) {\n      const esc = (s) => s.replace(/[|\\\\{}()\\[\\]^$+?.]/g, '\\\\$&').replace(/\\*/g, '[^.]+');\n      const rx = new RegExp(`^${esc(pattern)}$`);\n      return rx.test(topic);\n    }\n    return false;\n  }\n}\n\nexport default PanClient;\n\n"],
  "mappings": "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",
  "names": []
}
