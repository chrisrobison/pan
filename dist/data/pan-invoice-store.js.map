{
  "version": 3,
  "sources": ["../../pan/data/pan-invoice-store.mjs"],
  "sourcesContent": ["/**\n * pan-invoice-store\n *\n * Centralized state management for invoice application.\n * Handles localStorage persistence, invoice management, and coordinates\n * state between all invoice components via PAN.\n *\n * Features:\n * - LocalStorage persistence with encryption support\n * - Multiple invoice management (create, load, save, delete)\n * - Auto-save on changes\n * - Import/Export JSON\n * - Coordinates state via PAN bus\n *\n * PAN Events (subscribed):\n * - invoice.header.changed\n * - invoice.items.changed\n * - invoice.total.calculated\n * - invoice.save\n * - invoice.load-by-id\n * - invoice.new\n * - invoice.delete\n * - invoice.export\n * - invoice.import\n *\n * PAN Events (published):\n * - invoice.load: { header, items, totals }\n * - invoice.saved: { id, timestamp }\n * - invoice.list-updated: { invoices }\n * - invoice.current-changed: { id, invoice }\n *\n * Usage:\n *   <pan-invoice-store auto-save=\"true\"></pan-invoice-store>\n */\n\nexport class PanInvoiceStore extends HTMLElement {\n  static observedAttributes = ['auto-save'];\n\n  constructor() {\n    super();\n    this._currentInvoiceId = null;\n    this._currentInvoice = this._getEmptyInvoice();\n    this._autoSave = true;\n    this._saveDebounceTimer = null;\n    this._storageKey = 'pan-invoices';\n  }\n\n  connectedCallback() {\n    this._autoSave = this.hasAttribute('auto-save') ?\n      this.getAttribute('auto-save') !== 'false' : true;\n\n    this._setupPanListeners();\n    this._loadInvoicesList();\n\n    // Load last invoice or create new one\n    const invoices = this._getAllInvoices();\n    if (invoices.length > 0) {\n      const lastId = localStorage.getItem('pan-invoice-last-id');\n      const lastInvoice = invoices.find(inv => inv.id === lastId) || invoices[0];\n      this._loadInvoice(lastInvoice.id);\n    } else {\n      this._createNewInvoice();\n    }\n  }\n\n  _setupPanListeners() {\n    const bus = document.querySelector('pan-bus');\n    if (!bus) return;\n\n    // Subscribe to component changes\n    bus.subscribe('invoice.header.changed', (data) => {\n      this._currentInvoice.header = data;\n      this._markModified();\n      if (this._autoSave) this._debounceSave();\n    });\n\n    bus.subscribe('invoice.items.changed', (data) => {\n      this._currentInvoice.items = data.items;\n      this._markModified();\n      if (this._autoSave) this._debounceSave();\n    });\n\n    bus.subscribe('invoice.total.calculated', (data) => {\n      this._currentInvoice.totals = data;\n      this._markModified();\n      if (this._autoSave) this._debounceSave();\n    });\n\n    // Command handlers\n    bus.subscribe('invoice.save', () => {\n      this._saveCurrentInvoice();\n    });\n\n    bus.subscribe('invoice.load-by-id', (data) => {\n      if (data.id) this._loadInvoice(data.id);\n    });\n\n    bus.subscribe('invoice.new', () => {\n      this._createNewInvoice();\n    });\n\n    bus.subscribe('invoice.delete', (data) => {\n      const id = data.id || this._currentInvoiceId;\n      if (id) this._deleteInvoice(id);\n    });\n\n    bus.subscribe('invoice.export', () => {\n      this._exportInvoice();\n    });\n\n    bus.subscribe('invoice.import', (data) => {\n      if (data.json) this._importInvoice(data.json);\n    });\n\n    bus.subscribe('invoice.export-all', () => {\n      this._exportAllInvoices();\n    });\n\n    bus.subscribe('invoice.clear', () => {\n      this._currentInvoice = this._getEmptyInvoice();\n      this._broadcastInvoice();\n    });\n  }\n\n  _getEmptyInvoice() {\n    return {\n      id: this._generateId(),\n      created: new Date().toISOString(),\n      modified: new Date().toISOString(),\n      header: {\n        from: { name: '', address: '', city: '', phone: '', email: '' },\n        to: { name: '', address: '', city: '', phone: '', email: '' },\n        invoiceNumber: '',\n        invoiceDate: new Intl.DateFormat('en-US').format(new Date()),\n        dueDate: ''\n      },\n      items: [],\n      totals: {\n        subtotal: 0,\n        tax: 0,\n        taxRate: 0,\n        total: 0,\n        notes: ''\n      }\n    };\n  }\n\n  _createNewInvoice() {\n    // Save current if modified\n    if (this._currentInvoice.modified) {\n      this._saveCurrentInvoice();\n    }\n\n    this._currentInvoice = this._getEmptyInvoice();\n    this._currentInvoiceId = this._currentInvoice.id;\n\n    // Try to preserve \"from\" info from last invoice\n    const invoices = this._getAllInvoices();\n    if (invoices.length > 0) {\n      const lastInvoice = invoices[invoices.length - 1];\n      if (lastInvoice.header?.from) {\n        this._currentInvoice.header.from = { ...lastInvoice.header.from };\n      }\n      if (lastInvoice.totals?.taxRate) {\n        this._currentInvoice.totals.taxRate = lastInvoice.totals.taxRate;\n      }\n    }\n\n    this._broadcastInvoice();\n    this._broadcastInvoicesList();\n    this._publishEvent('invoice.current-changed', {\n      id: this._currentInvoiceId,\n      invoice: this._currentInvoice\n    });\n  }\n\n  _loadInvoice(id) {\n    const invoices = this._getAllInvoices();\n    const invoice = invoices.find(inv => inv.id === id);\n\n    if (invoice) {\n      this._currentInvoice = invoice;\n      this._currentInvoiceId = id;\n      localStorage.setItem('pan-invoice-last-id', id);\n\n      this._broadcastInvoice();\n      this._publishEvent('invoice.current-changed', {\n        id: this._currentInvoiceId,\n        invoice: this._currentInvoice\n      });\n    }\n  }\n\n  _saveCurrentInvoice() {\n    const invoices = this._getAllInvoices();\n    const existingIndex = invoices.findIndex(inv => inv.id === this._currentInvoiceId);\n\n    this._currentInvoice.modified = new Date().toISOString();\n\n    if (existingIndex >= 0) {\n      invoices[existingIndex] = this._currentInvoice;\n    } else {\n      invoices.push(this._currentInvoice);\n    }\n\n    this._saveAllInvoices(invoices);\n    this._broadcastInvoicesList();\n    this._publishEvent('invoice.saved', {\n      id: this._currentInvoiceId,\n      timestamp: this._currentInvoice.modified\n    });\n  }\n\n  _deleteInvoice(id) {\n    if (!confirm('Are you sure you want to delete this invoice?')) {\n      return;\n    }\n\n    const invoices = this._getAllInvoices();\n    const filtered = invoices.filter(inv => inv.id !== id);\n\n    this._saveAllInvoices(filtered);\n\n    // If deleting current invoice, load another or create new\n    if (id === this._currentInvoiceId) {\n      if (filtered.length > 0) {\n        this._loadInvoice(filtered[0].id);\n      } else {\n        this._createNewInvoice();\n      }\n    }\n\n    this._broadcastInvoicesList();\n  }\n\n  _exportInvoice() {\n    const json = JSON.stringify(this._currentInvoice, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `invoice-${this._currentInvoice.header.invoiceNumber || this._currentInvoiceId}.json`;\n    a.click();\n\n    URL.revokeObjectURL(url);\n  }\n\n  _exportAllInvoices() {\n    const invoices = this._getAllInvoices();\n    const json = JSON.stringify(invoices, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `all-invoices-${new Date().toISOString().split('T')[0]}.json`;\n    a.click();\n\n    URL.revokeObjectURL(url);\n  }\n\n  _importInvoice(json) {\n    try {\n      const data = typeof json === 'string' ? JSON.parse(json) : json;\n\n      if (Array.isArray(data)) {\n        // Import multiple invoices\n        const invoices = this._getAllInvoices();\n        data.forEach(invoice => {\n          invoice.id = invoice.id || this._generateId();\n          const existingIndex = invoices.findIndex(inv => inv.id === invoice.id);\n          if (existingIndex >= 0) {\n            invoices[existingIndex] = invoice;\n          } else {\n            invoices.push(invoice);\n          }\n        });\n        this._saveAllInvoices(invoices);\n        this._loadInvoice(data[0].id);\n      } else {\n        // Import single invoice\n        data.id = data.id || this._generateId();\n        const invoices = this._getAllInvoices();\n        invoices.push(data);\n        this._saveAllInvoices(invoices);\n        this._loadInvoice(data.id);\n      }\n\n      this._broadcastInvoicesList();\n    } catch (error) {\n      console.error('Failed to import invoice:', error);\n      this._publishEvent('invoice.error', { message: 'Failed to import invoice', error });\n    }\n  }\n\n  _broadcastInvoice() {\n    const bus = document.querySelector('pan-bus');\n    if (bus) {\n      bus.publish('invoice.load', this._currentInvoice);\n    }\n  }\n\n  _broadcastInvoicesList() {\n    const invoices = this._getAllInvoices();\n    const list = invoices.map(inv => ({\n      id: inv.id,\n      invoiceNumber: inv.header?.invoiceNumber || 'Untitled',\n      customerName: inv.header?.to?.name || 'No customer',\n      date: inv.header?.invoiceDate || inv.created,\n      total: inv.totals?.total || 0,\n      created: inv.created,\n      modified: inv.modified\n    }));\n\n    this._publishEvent('invoice.list-updated', { invoices: list });\n  }\n\n  _loadInvoicesList() {\n    this._broadcastInvoicesList();\n  }\n\n  _markModified() {\n    // Mark as modified without saving yet\n    this._currentInvoice.modified = new Date().toISOString();\n  }\n\n  _debounceSave() {\n    clearTimeout(this._saveDebounceTimer);\n    this._saveDebounceTimer = setTimeout(() => {\n      this._saveCurrentInvoice();\n    }, 1000); // Save 1 second after last change\n  }\n\n  _getAllInvoices() {\n    try {\n      const data = localStorage.getItem(this._storageKey);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error('Failed to load invoices:', error);\n      return [];\n    }\n  }\n\n  _saveAllInvoices(invoices) {\n    try {\n      localStorage.setItem(this._storageKey, JSON.stringify(invoices));\n    } catch (error) {\n      console.error('Failed to save invoices:', error);\n      this._publishEvent('invoice.error', { message: 'Failed to save to localStorage', error });\n    }\n  }\n\n  _generateId() {\n    return `INV-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  _publishEvent(topic, data) {\n    const bus = document.querySelector('pan-bus');\n    if (bus) {\n      bus.publish(topic, data);\n    }\n  }\n\n  // Public API\n  getCurrentInvoice() {\n    return this._currentInvoice;\n  }\n\n  getAllInvoices() {\n    return this._getAllInvoices();\n  }\n\n  save() {\n    this._saveCurrentInvoice();\n  }\n\n  load(id) {\n    this._loadInvoice(id);\n  }\n\n  createNew() {\n    this._createNewInvoice();\n  }\n}\n\ncustomElements.define('pan-invoice-store', PanInvoiceStore);\nexport default PanInvoiceStore;\n"],
  "mappings": "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",
  "names": []
}
