{
  "version": 3,
  "sources": ["../../pan/ui/pan-pagination.mjs"],
  "sourcesContent": ["// <pan-pagination> \u2014 Pagination control with PAN topic integration\n// Attributes:\n//   - current-page: Current page number (1-based, default: 1)\n//   - total-pages: Total number of pages\n//   - total-items: Total number of items\n//   - page-size: Items per page\n//   - topic: Topic prefix for events\n//   - show-info: Show \"Page X of Y\" text (default: true)\n//   - show-jump: Show page jump input (default: false)\n//\n// Topics:\n//   - Subscribes: {topic}.goto { page }\n//   - Publishes: {topic}.changed { page, pageSize }\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class PanPagination extends HTMLElement {\n  static get observedAttributes() {\n    return ['current-page', 'total-pages', 'total-items', 'page-size', 'topic', 'show-info', 'show-jump'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.pc = new PanClient(this);\n  }\n\n  connectedCallback() {\n    this.render();\n    this.setupTopics();\n    this.setupEvents();\n  }\n\n  attributeChangedCallback() {\n    if (this.isConnected) this.render();\n  }\n\n  get currentPage() { return parseInt(this.getAttribute('current-page')) || 1; }\n  set currentPage(val) { this.setAttribute('current-page', val); }\n  get totalPages() {\n    const attr = parseInt(this.getAttribute('total-pages'));\n    if (attr) return attr;\n    const totalItems = this.totalItems;\n    const pageSize = this.pageSize;\n    if (totalItems && pageSize) {\n      return Math.ceil(totalItems / pageSize);\n    }\n    return 1;\n  }\n  get totalItems() { return parseInt(this.getAttribute('total-items')) || 0; }\n  get pageSize() { return parseInt(this.getAttribute('page-size')) || 10; }\n  get topic() { return this.getAttribute('topic') || 'pagination'; }\n  get showInfo() { return this.getAttribute('show-info') !== 'false'; }\n  get showJump() { return this.hasAttribute('show-jump'); }\n\n  setupTopics() {\n    this.pc.subscribe(`${this.topic}.goto`, (msg) => {\n      if (typeof msg.data.page === 'number') {\n        this.goToPage(msg.data.page);\n      }\n    });\n  }\n\n  setupEvents() {\n    const prevBtn = this.shadowRoot.querySelector('.prev-btn');\n    const nextBtn = this.shadowRoot.querySelector('.next-btn');\n    const firstBtn = this.shadowRoot.querySelector('.first-btn');\n    const lastBtn = this.shadowRoot.querySelector('.last-btn');\n    const pageButtons = this.shadowRoot.querySelectorAll('.page-btn');\n    const jumpInput = this.shadowRoot.querySelector('.jump-input');\n\n    if (prevBtn) prevBtn.addEventListener('click', () => this.goToPage(this.currentPage - 1));\n    if (nextBtn) nextBtn.addEventListener('click', () => this.goToPage(this.currentPage + 1));\n    if (firstBtn) firstBtn.addEventListener('click', () => this.goToPage(1));\n    if (lastBtn) lastBtn.addEventListener('click', () => this.goToPage(this.totalPages));\n\n    pageButtons.forEach(btn => {\n      btn.addEventListener('click', () => {\n        const page = parseInt(btn.dataset.page);\n        this.goToPage(page);\n      });\n    });\n\n    if (jumpInput) {\n      jumpInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') {\n          const page = parseInt(jumpInput.value);\n          if (page >= 1 && page <= this.totalPages) {\n            this.goToPage(page);\n          }\n        }\n      });\n    }\n  }\n\n  goToPage(page) {\n    if (page < 1 || page > this.totalPages) return;\n    if (page === this.currentPage) return;\n\n    this.currentPage = page;\n\n    this.pc.publish({\n      topic: `${this.topic}.changed`,\n      data: { page, pageSize: this.pageSize }\n    });\n  }\n\n  getPageNumbers() {\n    const current = this.currentPage;\n    const total = this.totalPages;\n    const pages = [];\n\n    if (total <= 7) {\n      for (let i = 1; i <= total; i++) {\n        pages.push(i);\n      }\n    } else {\n      pages.push(1);\n\n      if (current > 3) {\n        pages.push('...');\n      }\n\n      const start = Math.max(2, current - 1);\n      const end = Math.min(total - 1, current + 1);\n\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n\n      if (current < total - 2) {\n        pages.push('...');\n      }\n\n      pages.push(total);\n    }\n\n    return pages;\n  }\n\n  render() {\n    const pages = this.getPageNumbers();\n    const startItem = (this.currentPage - 1) * this.pageSize + 1;\n    const endItem = Math.min(this.currentPage * this.pageSize, this.totalItems);\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n        }\n\n        .pagination {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          flex-wrap: wrap;\n        }\n\n        .pagination-info {\n          color: var(--pagination-info-color, #64748b);\n          font-size: 0.875rem;\n        }\n\n        .pagination-buttons {\n          display: flex;\n          gap: 0.5rem;\n          align-items: center;\n        }\n\n        .pagination-btn {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          min-width: 2.5rem;\n          height: 2.5rem;\n          padding: 0 0.75rem;\n          border: 1px solid var(--pagination-border, #e2e8f0);\n          background: var(--pagination-bg, #ffffff);\n          color: var(--pagination-color, #334155);\n          border-radius: 0.5rem;\n          cursor: pointer;\n          font-family: inherit;\n          font-size: 0.95rem;\n          font-weight: 500;\n          transition: all 0.2s;\n        }\n\n        .pagination-btn:hover:not(:disabled) {\n          background: var(--pagination-hover-bg, #f8fafc);\n          border-color: var(--pagination-hover-border, #cbd5e1);\n        }\n\n        .pagination-btn.active {\n          background: var(--pagination-active-bg, #6366f1);\n          color: var(--pagination-active-color, #ffffff);\n          border-color: var(--pagination-active-border, #6366f1);\n        }\n\n        .pagination-btn:disabled {\n          opacity: 0.4;\n          cursor: not-allowed;\n        }\n\n        .pagination-btn.ellipsis {\n          border: none;\n          background: transparent;\n          cursor: default;\n        }\n\n        .pagination-btn.ellipsis:hover {\n          background: transparent;\n        }\n\n        .jump-container {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n        }\n\n        .jump-input {\n          width: 4rem;\n          padding: 0.5rem;\n          border: 1px solid var(--pagination-border, #e2e8f0);\n          border-radius: 0.375rem;\n          font-family: inherit;\n          text-align: center;\n        }\n      </style>\n\n      <div class=\"pagination\">\n        ${this.showInfo && this.totalItems > 0 ? `\n          <div class=\"pagination-info\">\n            Showing ${startItem}-${endItem} of ${this.totalItems}\n          </div>\n        ` : ''}\n\n        <div class=\"pagination-buttons\">\n          <button\n            class=\"pagination-btn first-btn\"\n            ${this.currentPage === 1 ? 'disabled' : ''}\n            title=\"First page\"\n          >\n            \u27E8\u27E8\n          </button>\n\n          <button\n            class=\"pagination-btn prev-btn\"\n            ${this.currentPage === 1 ? 'disabled' : ''}\n            title=\"Previous page\"\n          >\n            \u27E8\n          </button>\n\n          ${pages.map(page => {\n            if (page === '...') {\n              return '<button class=\"pagination-btn ellipsis\" disabled>...</button>';\n            }\n            return `\n              <button\n                class=\"pagination-btn page-btn ${page === this.currentPage ? 'active' : ''}\"\n                data-page=\"${page}\"\n              >\n                ${page}\n              </button>\n            `;\n          }).join('')}\n\n          <button\n            class=\"pagination-btn next-btn\"\n            ${this.currentPage === this.totalPages ? 'disabled' : ''}\n            title=\"Next page\"\n          >\n            \u27E9\n          </button>\n\n          <button\n            class=\"pagination-btn last-btn\"\n            ${this.currentPage === this.totalPages ? 'disabled' : ''}\n            title=\"Last page\"\n          >\n            \u27E9\u27E9\n          </button>\n        </div>\n\n        ${this.showJump ? `\n          <div class=\"jump-container\">\n            <span>Go to:</span>\n            <input\n              type=\"number\"\n              class=\"jump-input\"\n              min=\"1\"\n              max=\"${this.totalPages}\"\n              placeholder=\"${this.currentPage}\"\n            >\n          </div>\n        ` : ''}\n      </div>\n    `;\n\n    // Re-setup events after render\n    if (this.isConnected) {\n      setTimeout(() => this.setupEvents(), 0);\n    }\n  }\n}\n\ncustomElements.define('pan-pagination', PanPagination);\nexport default PanPagination;\n"],
  "mappings": "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",
  "names": []
}
