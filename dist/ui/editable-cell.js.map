{
  "version": 3,
  "sources": ["../../pan/ui/editable-cell.mjs"],
  "sourcesContent": ["// <editable-cell> \u2014 In-place editable cell with PAN integration\n// Attributes:\n//   - value: Current cell value\n//   - type: text, number, email, url, tel, date (default: text)\n//   - placeholder: Placeholder text\n//   - topic: Topic prefix for events\n//   - cell-id: Identifier for this cell\n//   - editable: Enable editing (default: true)\n//   - multiline: Use textarea for editing\n//\n// Topics:\n//   - Publishes: {topic}.change { cellId, value, oldValue }\n//   - Publishes: {topic}.focus { cellId }\n//   - Publishes: {topic}.blur { cellId }\n//   - Subscribes: {topic}.setValue { cellId, value }\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class EditableCell extends HTMLElement {\n  static get observedAttributes() {\n    return ['value', 'type', 'placeholder', 'topic', 'cell-id', 'editable', 'multiline'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.pc = new PanClient(this);\n    this.isEditing = false;\n    this.oldValue = '';\n  }\n\n  connectedCallback() {\n    this.render();\n    this.setupTopics();\n    this.setupEvents();\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    if (name === 'value' && oldVal !== newVal && !this.isEditing) {\n      if (this.isConnected) this.render();\n    } else if (this.isConnected) {\n      this.render();\n    }\n  }\n\n  get value() { return this.getAttribute('value') || ''; }\n  set value(val) { this.setAttribute('value', val); }\n  get type() { return this.getAttribute('type') || 'text'; }\n  get placeholder() { return this.getAttribute('placeholder') || 'Click to edit'; }\n  get topic() { return this.getAttribute('topic') || 'cell'; }\n  get cellId() { return this.getAttribute('cell-id') || crypto.randomUUID(); }\n  get editable() { return this.getAttribute('editable') !== 'false'; }\n  get multiline() { return this.hasAttribute('multiline'); }\n\n  setupTopics() {\n    this.pc.subscribe(`${this.topic}.setValue`, (msg) => {\n      if (msg.data.cellId === this.cellId) {\n        this.value = msg.data.value;\n      }\n    });\n  }\n\n  setupEvents() {\n    const display = this.shadowRoot.querySelector('.cell-display');\n    const input = this.shadowRoot.querySelector('.cell-input');\n\n    if (display && this.editable) {\n      display.addEventListener('click', () => this.startEdit());\n      display.addEventListener('dblclick', () => this.startEdit());\n    }\n\n    if (input) {\n      input.addEventListener('blur', () => this.finishEdit());\n      input.addEventListener('keydown', (e) => {\n        if (e.key === 'Enter' && !this.multiline) {\n          e.preventDefault();\n          this.finishEdit();\n        } else if (e.key === 'Escape') {\n          this.cancelEdit();\n        } else if (e.key === 'Enter' && e.ctrlKey && this.multiline) {\n          this.finishEdit();\n        }\n      });\n\n      input.addEventListener('focus', () => {\n        this.pc.publish({\n          topic: `${this.topic}.focus`,\n          data: { cellId: this.cellId }\n        });\n      });\n    }\n  }\n\n  startEdit() {\n    if (!this.editable || this.isEditing) return;\n\n    this.isEditing = true;\n    this.oldValue = this.value;\n\n    const display = this.shadowRoot.querySelector('.cell-display');\n    const input = this.shadowRoot.querySelector('.cell-input');\n\n    if (display) display.style.display = 'none';\n    if (input) {\n      input.style.display = 'block';\n      input.value = this.value;\n      input.focus();\n      if (input.select) input.select();\n    }\n  }\n\n  finishEdit() {\n    if (!this.isEditing) return;\n\n    const input = this.shadowRoot.querySelector('.cell-input');\n    const newValue = input ? input.value : this.value;\n\n    this.isEditing = false;\n\n    if (newValue !== this.oldValue) {\n      this.value = newValue;\n\n      this.pc.publish({\n        topic: `${this.topic}.change`,\n        data: {\n          cellId: this.cellId,\n          value: newValue,\n          oldValue: this.oldValue\n        }\n      });\n    }\n\n    this.updateDisplay();\n\n    this.pc.publish({\n      topic: `${this.topic}.blur`,\n      data: { cellId: this.cellId }\n    });\n  }\n\n  cancelEdit() {\n    if (!this.isEditing) return;\n\n    this.isEditing = false;\n    this.updateDisplay();\n  }\n\n  updateDisplay() {\n    const display = this.shadowRoot.querySelector('.cell-display');\n    const input = this.shadowRoot.querySelector('.cell-input');\n\n    if (display) {\n      display.style.display = 'flex';\n      display.textContent = this.value || this.placeholder;\n      display.classList.toggle('empty', !this.value);\n    }\n\n    if (input) {\n      input.style.display = 'none';\n    }\n  }\n\n  render() {\n    const hasValue = !!this.value;\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n        }\n\n        .cell-container {\n          position: relative;\n          min-height: 32px;\n        }\n\n        .cell-display {\n          display: flex;\n          align-items: center;\n          padding: 0.5rem 0.75rem;\n          min-height: 32px;\n          cursor: ${this.editable ? 'text' : 'default'};\n          border-radius: 0.375rem;\n          transition: all 0.2s;\n          color: var(--cell-color, #1e293b);\n          background: var(--cell-bg, transparent);\n          border: 1px solid transparent;\n        }\n\n        .cell-display:hover {\n          background: var(--cell-hover-bg, #f8fafc);\n          border-color: var(--cell-hover-border, #e2e8f0);\n        }\n\n        .cell-display.empty {\n          color: var(--cell-placeholder-color, #94a3b8);\n          font-style: italic;\n        }\n\n        .cell-input {\n          display: none;\n          width: 100%;\n          padding: 0.5rem 0.75rem;\n          border: 2px solid var(--cell-focus-border, #6366f1);\n          border-radius: 0.375rem;\n          font-family: inherit;\n          font-size: inherit;\n          background: var(--cell-input-bg, #ffffff);\n          color: var(--cell-color, #1e293b);\n          outline: none;\n          box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n        }\n\n        textarea.cell-input {\n          min-height: 80px;\n          resize: vertical;\n        }\n\n        .cell-input:focus {\n          border-color: var(--cell-focus-border, #6366f1);\n        }\n\n        :host([editable=\"false\"]) .cell-display {\n          cursor: default;\n        }\n\n        :host([editable=\"false\"]) .cell-display:hover {\n          background: transparent;\n          border-color: transparent;\n        }\n      </style>\n\n      <div class=\"cell-container\">\n        <div class=\"cell-display ${!hasValue ? 'empty' : ''}\">\n          ${this.value || this.placeholder}\n        </div>\n        ${this.multiline ? `\n          <textarea class=\"cell-input\" placeholder=\"${this.placeholder}\"></textarea>\n        ` : `\n          <input\n            type=\"${this.type}\"\n            class=\"cell-input\"\n            placeholder=\"${this.placeholder}\"\n          >\n        `}\n      </div>\n    `;\n\n    // Re-setup events after render\n    if (this.isConnected) {\n      setTimeout(() => this.setupEvents(), 0);\n    }\n  }\n}\n\ncustomElements.define('editable-cell', EditableCell);\nexport default EditableCell;\n"],
  "mappings": "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",
  "names": []
}
