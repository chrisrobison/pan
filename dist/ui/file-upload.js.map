{
  "version": 3,
  "sources": ["../../pan/ui/file-upload.mjs"],
  "sourcesContent": ["// <file-upload> \u2014 File upload with preview and PAN integration\n// Attributes:\n//   - accept: File type filter (e.g., \"image/*\", \".pdf,.doc\")\n//   - multiple: Allow multiple files\n//   - max-size: Maximum file size in bytes\n//   - topic: Topic prefix for events\n//   - preview: Show image preview (default: true for images)\n//   - drag-drop: Enable drag-and-drop (default: true)\n//\n// Topics:\n//   - Publishes: {topic}.upload { files: FileList, data: Array<{name, size, type, dataUrl?}> }\n//   - Publishes: {topic}.remove { index }\n//   - Publishes: {topic}.error { error, file }\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class FileUpload extends HTMLElement {\n  static get observedAttributes() {\n    return ['accept', 'multiple', 'max-size', 'topic', 'preview', 'drag-drop'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.pc = new PanClient(this);\n    this.files = [];\n  }\n\n  connectedCallback() {\n    this.render();\n    this.setupEvents();\n  }\n\n  attributeChangedCallback() {\n    if (this.isConnected) this.render();\n  }\n\n  get accept() { return this.getAttribute('accept') || ''; }\n  get multiple() { return this.hasAttribute('multiple'); }\n  get maxSize() { return parseInt(this.getAttribute('max-size')) || Infinity; }\n  get topic() { return this.getAttribute('topic') || 'upload'; }\n  get preview() { return this.getAttribute('preview') !== 'false'; }\n  get dragDrop() { return this.getAttribute('drag-drop') !== 'false'; }\n\n  setupEvents() {\n    const input = this.shadowRoot.querySelector('.file-input');\n    const dropZone = this.shadowRoot.querySelector('.drop-zone');\n    const browseBtn = this.shadowRoot.querySelector('.browse-btn');\n\n    if (input) {\n      input.addEventListener('change', (e) => this.handleFiles(e.target.files));\n    }\n\n    if (browseBtn) {\n      browseBtn.addEventListener('click', () => input?.click());\n    }\n\n    if (dropZone && this.dragDrop) {\n      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n        dropZone.addEventListener(eventName, (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n        });\n      });\n\n      ['dragenter', 'dragover'].forEach(eventName => {\n        dropZone.addEventListener(eventName, () => {\n          dropZone.classList.add('drag-over');\n        });\n      });\n\n      ['dragleave', 'drop'].forEach(eventName => {\n        dropZone.addEventListener(eventName, () => {\n          dropZone.classList.remove('drag-over');\n        });\n      });\n\n      dropZone.addEventListener('drop', (e) => {\n        const files = e.dataTransfer.files;\n        this.handleFiles(files);\n      });\n    }\n  }\n\n  async handleFiles(fileList) {\n    const filesArray = Array.from(fileList);\n\n    // Validate files\n    for (const file of filesArray) {\n      if (file.size > this.maxSize) {\n        this.publishError(`File ${file.name} exceeds maximum size`, file);\n        continue;\n      }\n\n      // Read file data\n      const fileData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      };\n\n      // Add preview for images\n      if (this.preview && file.type.startsWith('image/')) {\n        fileData.dataUrl = await this.readFileAsDataURL(file);\n      }\n\n      this.files.push({ file, data: fileData });\n    }\n\n    this.renderFileList();\n\n    // Publish upload event\n    this.pc.publish({\n      topic: `${this.topic}.upload`,\n      data: {\n        files: filesArray,\n        data: this.files.map(f => f.data)\n      }\n    });\n  }\n\n  readFileAsDataURL(file) {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (e) => resolve(e.target.result);\n      reader.onerror = () => resolve(null);\n      reader.readAsDataURL(file);\n    });\n  }\n\n  removeFile(index) {\n    this.files.splice(index, 1);\n    this.renderFileList();\n\n    this.pc.publish({\n      topic: `${this.topic}.remove`,\n      data: { index }\n    });\n  }\n\n  publishError(error, file) {\n    this.pc.publish({\n      topic: `${this.topic}.error`,\n      data: { error, file: file ? { name: file.name, size: file.size, type: file.type } : null }\n    });\n  }\n\n  formatFileSize(bytes) {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n  }\n\n  renderFileList() {\n    const fileList = this.shadowRoot.querySelector('.file-list');\n    if (!fileList) return;\n\n    if (this.files.length === 0) {\n      fileList.innerHTML = '';\n      return;\n    }\n\n    fileList.innerHTML = this.files.map((item, index) => {\n      const { data } = item;\n      const isImage = data.type.startsWith('image/');\n\n      return `\n        <div class=\"file-item\">\n          ${isImage && data.dataUrl ? `\n            <div class=\"file-preview\">\n              <img src=\"${data.dataUrl}\" alt=\"${data.name}\">\n            </div>\n          ` : `\n            <div class=\"file-icon\">\uD83D\uDCC4</div>\n          `}\n          <div class=\"file-info\">\n            <div class=\"file-name\">${data.name}</div>\n            <div class=\"file-size\">${this.formatFileSize(data.size)}</div>\n          </div>\n          <button class=\"remove-btn\" data-index=\"${index}\">\u2715</button>\n        </div>\n      `;\n    }).join('');\n\n    // Add remove event listeners\n    fileList.querySelectorAll('.remove-btn').forEach(btn => {\n      btn.addEventListener('click', () => {\n        const index = parseInt(btn.dataset.index);\n        this.removeFile(index);\n      });\n    });\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n        }\n\n        .upload-container {\n          width: 100%;\n        }\n\n        .drop-zone {\n          border: 2px dashed var(--upload-border, #cbd5e1);\n          border-radius: 0.75rem;\n          padding: 2rem;\n          text-align: center;\n          background: var(--upload-bg, #f8fafc);\n          transition: all 0.2s;\n          cursor: pointer;\n        }\n\n        .drop-zone:hover {\n          border-color: var(--upload-hover-border, #6366f1);\n          background: var(--upload-hover-bg, #f1f5f9);\n        }\n\n        .drop-zone.drag-over {\n          border-color: var(--upload-active-border, #6366f1);\n          background: var(--upload-active-bg, #eef2ff);\n        }\n\n        .drop-icon {\n          font-size: 3rem;\n          margin-bottom: 1rem;\n        }\n\n        .drop-text {\n          font-size: 1rem;\n          color: var(--upload-text, #64748b);\n          margin-bottom: 0.5rem;\n        }\n\n        .drop-hint {\n          font-size: 0.875rem;\n          color: var(--upload-hint, #94a3b8);\n        }\n\n        .browse-btn {\n          margin-top: 1rem;\n          padding: 0.625rem 1.25rem;\n          background: var(--upload-btn-bg, #6366f1);\n          color: white;\n          border: none;\n          border-radius: 0.5rem;\n          cursor: pointer;\n          font-family: inherit;\n          font-weight: 600;\n          transition: all 0.2s;\n        }\n\n        .browse-btn:hover {\n          background: var(--upload-btn-hover, #4f46e5);\n        }\n\n        .file-input {\n          display: none;\n        }\n\n        .file-list {\n          margin-top: 1.5rem;\n          display: flex;\n          flex-direction: column;\n          gap: 0.75rem;\n        }\n\n        .file-item {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          padding: 0.75rem;\n          background: var(--upload-item-bg, #ffffff);\n          border: 1px solid var(--upload-item-border, #e2e8f0);\n          border-radius: 0.5rem;\n        }\n\n        .file-preview {\n          width: 60px;\n          height: 60px;\n          border-radius: 0.375rem;\n          overflow: hidden;\n          flex-shrink: 0;\n        }\n\n        .file-preview img {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n\n        .file-icon {\n          width: 60px;\n          height: 60px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 2rem;\n          background: var(--upload-icon-bg, #f1f5f9);\n          border-radius: 0.375rem;\n          flex-shrink: 0;\n        }\n\n        .file-info {\n          flex: 1;\n          min-width: 0;\n        }\n\n        .file-name {\n          font-weight: 500;\n          color: var(--upload-file-name, #1e293b);\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n\n        .file-size {\n          font-size: 0.875rem;\n          color: var(--upload-file-size, #64748b);\n        }\n\n        .remove-btn {\n          width: 32px;\n          height: 32px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border: none;\n          background: var(--upload-remove-bg, #fee2e2);\n          color: var(--upload-remove-color, #ef4444);\n          border-radius: 0.375rem;\n          cursor: pointer;\n          font-size: 1.125rem;\n          transition: all 0.2s;\n          flex-shrink: 0;\n        }\n\n        .remove-btn:hover {\n          background: var(--upload-remove-hover, #fecaca);\n        }\n      </style>\n\n      <div class=\"upload-container\">\n        <div class=\"drop-zone\">\n          <div class=\"drop-icon\">\uD83D\uDCC1</div>\n          <div class=\"drop-text\">\n            ${this.dragDrop ? 'Drag and drop files here' : 'Click to upload files'}\n          </div>\n          <div class=\"drop-hint\">\n            ${this.accept ? `Accepts: ${this.accept}` : 'Any file type'}\n            ${this.maxSize !== Infinity ? ` \u2022 Max: ${this.formatFileSize(this.maxSize)}` : ''}\n          </div>\n          <button class=\"browse-btn\">Browse Files</button>\n        </div>\n\n        <input\n          type=\"file\"\n          class=\"file-input\"\n          ${this.accept ? `accept=\"${this.accept}\"` : ''}\n          ${this.multiple ? 'multiple' : ''}\n        >\n\n        <div class=\"file-list\"></div>\n      </div>\n    `;\n\n    // Re-setup events after render\n    if (this.isConnected) {\n      setTimeout(() => {\n        this.setupEvents();\n        this.renderFileList();\n      }, 0);\n    }\n  }\n}\n\ncustomElements.define('file-upload', FileUpload);\nexport default FileUpload;\n"],
  "mappings": "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",
  "names": []
}
