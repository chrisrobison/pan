{
  "version": 3,
  "sources": ["../../pan/ui/pan-tabs.mjs"],
  "sourcesContent": ["// <pan-tabs> \u2014 Tabbed interface with PAN topic integration\n// Attributes:\n//   - active: Currently active tab index (default: 0)\n//   - topic: Topic prefix for events\n//   - tabs: JSON array of tab configs [{label, id, icon?, disabled?}]\n//\n// Topics:\n//   - Subscribes: {topic}.select { index }\n//   - Publishes: {topic}.changed { index, id, label }\n//\n// Usage with slots:\n//   <pan-tabs>\n//     <div slot=\"tab-0\">First tab content</div>\n//     <div slot=\"tab-1\">Second tab content</div>\n//   </pan-tabs>\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class PanTabs extends HTMLElement {\n  static get observedAttributes() {\n    return ['active', 'topic', 'tabs'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.pc = new PanClient(this);\n    this.activeIndex = 0;\n  }\n\n  connectedCallback() {\n    this.activeIndex = parseInt(this.getAttribute('active')) || 0;\n    this.render();\n    this.setupTopics();\n    this.setupEvents();\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    if (name === 'active' && oldVal !== newVal) {\n      this.activeIndex = parseInt(newVal) || 0;\n    }\n    if (this.isConnected) this.render();\n  }\n\n  get topic() { return this.getAttribute('topic') || 'tabs'; }\n  get tabs() {\n    const attr = this.getAttribute('tabs');\n    if (!attr) {\n      // Auto-discover from slots\n      const slots = Array.from(this.querySelectorAll('[slot^=\"tab-\"]'));\n      return slots.map((slot, i) => ({\n        label: slot.getAttribute('data-label') || `Tab ${i + 1}`,\n        id: slot.getAttribute('slot').replace('tab-', '')\n      }));\n    }\n    try {\n      return JSON.parse(attr);\n    } catch {\n      return [];\n    }\n  }\n\n  setupTopics() {\n    this.pc.subscribe(`${this.topic}.select`, (msg) => {\n      if (typeof msg.data.index === 'number') {\n        this.selectTab(msg.data.index);\n      }\n    });\n  }\n\n  setupEvents() {\n    const tabButtons = this.shadowRoot.querySelectorAll('.tab-button');\n    tabButtons.forEach((btn, index) => {\n      btn.addEventListener('click', () => {\n        if (!btn.hasAttribute('disabled')) {\n          this.selectTab(index);\n        }\n      });\n    });\n  }\n\n  selectTab(index) {\n    if (index < 0 || index >= this.tabs.length) return;\n    if (this.tabs[index].disabled) return;\n\n    this.activeIndex = index;\n    this.setAttribute('active', index);\n\n    // Update UI\n    const tabButtons = this.shadowRoot.querySelectorAll('.tab-button');\n    const tabPanels = this.shadowRoot.querySelectorAll('.tab-panel');\n\n    tabButtons.forEach((btn, i) => {\n      btn.classList.toggle('active', i === index);\n      btn.setAttribute('aria-selected', i === index);\n    });\n\n    tabPanels.forEach((panel, i) => {\n      panel.classList.toggle('active', i === index);\n      panel.setAttribute('aria-hidden', i !== index);\n    });\n\n    // Publish change\n    this.pc.publish({\n      topic: `${this.topic}.changed`,\n      data: {\n        index,\n        id: this.tabs[index].id || index,\n        label: this.tabs[index].label\n      }\n    });\n  }\n\n  render() {\n    const tabs = this.tabs;\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n        }\n\n        .tabs-container {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .tab-list {\n          display: flex;\n          gap: 0.25rem;\n          border-bottom: 2px solid var(--tabs-border, #e2e8f0);\n          background: var(--tabs-bg, #f8fafc);\n          padding: 0 0.5rem;\n        }\n\n        .tab-button {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          padding: 0.875rem 1.25rem;\n          border: none;\n          background: transparent;\n          cursor: pointer;\n          font-family: inherit;\n          font-size: 0.95rem;\n          font-weight: 500;\n          color: var(--tabs-color, #64748b);\n          border-bottom: 2px solid transparent;\n          margin-bottom: -2px;\n          transition: all 0.2s;\n        }\n\n        .tab-button:hover:not([disabled]) {\n          color: var(--tabs-hover-color, #1e293b);\n          background: var(--tabs-hover-bg, #f1f5f9);\n        }\n\n        .tab-button.active {\n          color: var(--tabs-active-color, #6366f1);\n          border-bottom-color: var(--tabs-active-border, #6366f1);\n          background: var(--tabs-active-bg, #ffffff);\n        }\n\n        .tab-button[disabled] {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .tab-icon {\n          font-size: 1.125rem;\n        }\n\n        .tab-panels {\n          padding: 1.5rem;\n          background: var(--tabs-panel-bg, #ffffff);\n        }\n\n        .tab-panel {\n          display: none;\n        }\n\n        .tab-panel.active {\n          display: block;\n        }\n      </style>\n\n      <div class=\"tabs-container\" role=\"tablist\">\n        <div class=\"tab-list\">\n          ${tabs.map((tab, i) => `\n            <button\n              class=\"tab-button ${i === this.activeIndex ? 'active' : ''}\"\n              role=\"tab\"\n              aria-selected=\"${i === this.activeIndex}\"\n              ${tab.disabled ? 'disabled' : ''}\n            >\n              ${tab.icon ? `<span class=\"tab-icon\">${tab.icon}</span>` : ''}\n              ${tab.label}\n            </button>\n          `).join('')}\n        </div>\n\n        <div class=\"tab-panels\">\n          ${tabs.map((tab, i) => `\n            <div\n              class=\"tab-panel ${i === this.activeIndex ? 'active' : ''}\"\n              role=\"tabpanel\"\n              aria-hidden=\"${i !== this.activeIndex}\"\n            >\n              <slot name=\"tab-${tab.id || i}\"></slot>\n            </div>\n          `).join('')}\n        </div>\n      </div>\n    `;\n\n    // Re-setup events after render\n    if (this.isConnected) {\n      setTimeout(() => this.setupEvents(), 0);\n    }\n  }\n}\n\ncustomElements.define('pan-tabs', PanTabs);\nexport default PanTabs;\n"],
  "mappings": "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",
  "names": []
}
