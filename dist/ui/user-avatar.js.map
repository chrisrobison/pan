{
  "version": 3,
  "sources": ["../../pan/ui/user-avatar.mjs"],
  "sourcesContent": ["// <user-avatar> \u2014 User avatar with status indicator\n// Attributes:\n//   - name: User name (for initials)\n//   - image: Image URL\n//   - size: xs, sm, md, lg, xl (default: md)\n//   - status: online, offline, away, busy\n//   - show-status: Show status indicator (default: false)\n//   - color: Custom background color\n//\n// Slots:\n//   - default: Custom content (overrides image/initials)\n\nexport class UserAvatar extends HTMLElement {\n  static get observedAttributes() {\n    return ['name', 'image', 'size', 'status', 'show-status', 'color'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n\n  attributeChangedCallback() {\n    if (this.isConnected) this.render();\n  }\n\n  get name() { return this.getAttribute('name') || ''; }\n  get image() { return this.getAttribute('image') || ''; }\n  get size() { return this.getAttribute('size') || 'md'; }\n  get status() { return this.getAttribute('status') || ''; }\n  get showStatus() { return this.hasAttribute('show-status'); }\n  get color() { return this.getAttribute('color') || ''; }\n\n  getInitials(name) {\n    if (!name) return '?';\n    const parts = name.trim().split(/\\s+/);\n    if (parts.length >= 2) {\n      return (parts[0][0] + parts[parts.length - 1][0]).toUpperCase();\n    }\n    return name.slice(0, 2).toUpperCase();\n  }\n\n  getColorFromName(name) {\n    if (!name) return '#94a3b8';\n    let hash = 0;\n    for (let i = 0; i < name.length; i++) {\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const hue = hash % 360;\n    return `hsl(${hue}, 65%, 55%)`;\n  }\n\n  render() {\n    const hasSlot = this.querySelector('[slot]') || this.textContent.trim();\n    const initials = this.getInitials(this.name);\n    const bgColor = this.color || this.getColorFromName(this.name);\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          position: relative;\n        }\n\n        .avatar {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 50%;\n          overflow: hidden;\n          background: ${bgColor};\n          color: white;\n          font-weight: 700;\n          user-select: none;\n          position: relative;\n        }\n\n        .avatar.size-xs {\n          width: 24px;\n          height: 24px;\n          font-size: 0.625rem;\n        }\n\n        .avatar.size-sm {\n          width: 32px;\n          height: 32px;\n          font-size: 0.75rem;\n        }\n\n        .avatar.size-md {\n          width: 40px;\n          height: 40px;\n          font-size: 0.875rem;\n        }\n\n        .avatar.size-lg {\n          width: 56px;\n          height: 56px;\n          font-size: 1.25rem;\n        }\n\n        .avatar.size-xl {\n          width: 80px;\n          height: 80px;\n          font-size: 1.75rem;\n        }\n\n        .avatar-image {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n\n        .status-indicator {\n          position: absolute;\n          bottom: 0;\n          right: 0;\n          width: 28%;\n          height: 28%;\n          border-radius: 50%;\n          border: 2px solid white;\n          box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n        }\n\n        .status-online {\n          background: #10b981;\n        }\n\n        .status-offline {\n          background: #94a3b8;\n        }\n\n        .status-away {\n          background: #f59e0b;\n        }\n\n        .status-busy {\n          background: #ef4444;\n        }\n      </style>\n\n      <div class=\"avatar size-${this.size}\">\n        ${this.image ? `\n          <img src=\"${this.image}\" alt=\"${this.name}\" class=\"avatar-image\">\n        ` : hasSlot ? `\n          <slot></slot>\n        ` : `\n          ${initials}\n        `}\n        ${this.showStatus && this.status ? `\n          <div class=\"status-indicator status-${this.status}\"></div>\n        ` : ''}\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('user-avatar', UserAvatar);\nexport default UserAvatar;\n"],
  "mappings": "AAYO,MAAM,mBAAmB,YAAY;AAAA,EAC1C,WAAW,qBAAqB;AAC9B,WAAO,CAAC,QAAQ,SAAS,QAAQ,UAAU,eAAe,OAAO;AAAA,EACnE;AAAA,EAEA,cAAc;AACZ,UAAM;AACN,SAAK,aAAa,EAAE,MAAM,OAAO,CAAC;AAAA,EACpC;AAAA,EAEA,oBAAoB;AAClB,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,2BAA2B;AACzB,QAAI,KAAK,YAAa,MAAK,OAAO;AAAA,EACpC;AAAA,EAEA,IAAI,OAAO;AAAE,WAAO,KAAK,aAAa,MAAM,KAAK;AAAA,EAAI;AAAA,EACrD,IAAI,QAAQ;AAAE,WAAO,KAAK,aAAa,OAAO,KAAK;AAAA,EAAI;AAAA,EACvD,IAAI,OAAO;AAAE,WAAO,KAAK,aAAa,MAAM,KAAK;AAAA,EAAM;AAAA,EACvD,IAAI,SAAS;AAAE,WAAO,KAAK,aAAa,QAAQ,KAAK;AAAA,EAAI;AAAA,EACzD,IAAI,aAAa;AAAE,WAAO,KAAK,aAAa,aAAa;AAAA,EAAG;AAAA,EAC5D,IAAI,QAAQ;AAAE,WAAO,KAAK,aAAa,OAAO,KAAK;AAAA,EAAI;AAAA,EAEvD,YAAY,MAAM;AAChB,QAAI,CAAC,KAAM,QAAO;AAClB,UAAM,QAAQ,KAAK,KAAK,EAAE,MAAM,KAAK;AACrC,QAAI,MAAM,UAAU,GAAG;AACrB,cAAQ,MAAM,CAAC,EAAE,CAAC,IAAI,MAAM,MAAM,SAAS,CAAC,EAAE,CAAC,GAAG,YAAY;AAAA,IAChE;AACA,WAAO,KAAK,MAAM,GAAG,CAAC,EAAE,YAAY;AAAA,EACtC;AAAA,EAEA,iBAAiB,MAAM;AACrB,QAAI,CAAC,KAAM,QAAO;AAClB,QAAI,OAAO;AACX,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,aAAO,KAAK,WAAW,CAAC,MAAM,QAAQ,KAAK;AAAA,IAC7C;AACA,UAAM,MAAM,OAAO;AACnB,WAAO,OAAO,GAAG;AAAA,EACnB;AAAA,EAEA,SAAS;AACP,UAAM,UAAU,KAAK,cAAc,QAAQ,KAAK,KAAK,YAAY,KAAK;AACtE,UAAM,WAAW,KAAK,YAAY,KAAK,IAAI;AAC3C,UAAM,UAAU,KAAK,SAAS,KAAK,iBAAiB,KAAK,IAAI;AAE7D,SAAK,WAAW,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAaR,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAuEC,KAAK,IAAI;AAAA,UAC/B,KAAK,QAAQ;AAAA,sBACD,KAAK,KAAK,UAAU,KAAK,IAAI;AAAA,YACvC,UAAU;AAAA;AAAA,YAEV;AAAA,YACA,QAAQ;AAAA,SACX;AAAA,UACC,KAAK,cAAc,KAAK,SAAS;AAAA,gDACK,KAAK,MAAM;AAAA,YAC/C,EAAE;AAAA;AAAA;AAAA,EAGZ;AACF;AAEA,eAAe,OAAO,eAAe,UAAU;AAC/C,IAAO,sBAAQ;",
  "names": []
}
