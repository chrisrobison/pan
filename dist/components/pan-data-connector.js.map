{
  "version": 3,
  "sources": ["../../pan/components/pan-data-connector.mjs"],
  "sourcesContent": ["// <pan-data-connector> \u2014 REST data connector for PAN CRUD demos\n// Listens on `${resource}.list.get`, `${resource}.item.get`, `${resource}.item.save`, `${resource}.item.delete`\n// and proxies to HTTP endpoints using fetch(). Publishes `${resource}.list.state` (retain).\n\nimport { PanClient } from './pan-client.mjs';\n\n/**\n * Attributes:\n * - resource: logical resource name (e.g., \"users\")\n * - base-url: base URL for the API (e.g., \"/api\" or \"https://api.example.com\")\n * - key: identifier field (default: \"id\")\n * - list-path: optional override for list endpoint (default: `/${resource}`)\n * - item-path: optional override for item endpoint (default: `/${resource}/:id`)\n * - update-method: HTTP method for updates (default: PUT; also supports PATCH)\n * - credentials: fetch credentials mode (e.g., \"include\")\n *\n * Optional child <script type=\"application/json\"> can provide default fetch options, e.g., headers.\n * Example:\n * <pan-data-connector resource=\"users\" base-url=\"https://api.example.com\">\n *   <script type=\"application/json\">{\"headers\":{\"Authorization\":\"Bearer <token>\"}}</script>\n * </pan-data-connector>\n */\nexport class PanDataConnector extends HTMLElement {\n  constructor(){ super(); this.pc = new PanClient(this); }\n\n  connectedCallback(){\n    this.resource = (this.getAttribute('resource') || 'items').trim();\n    this.key = (this.getAttribute('key') || 'id').trim();\n    this.baseUrl = (this.getAttribute('base-url') || '').trim().replace(/\\/?$/, '');\n    this.listPath = (this.getAttribute('list-path') || `/${this.resource}`).trim();\n    this.itemPath = (this.getAttribute('item-path') || `/${this.resource}/:id`).trim();\n    this.updateMethod = (this.getAttribute('update-method') || 'PUT').toUpperCase();\n    this.credentials = (this.getAttribute('credentials') || '').trim();\n    this.opts = this.#loadOpts(); // default fetch options\n\n    const listGet = `${this.resource}.list.get`;\n    const itemGet = `${this.resource}.item.get`;\n    const itemSave = `${this.resource}.item.save`;\n    const itemDelete = `${this.resource}.item.delete`;\n\n    this.off = [\n      this.pc.subscribe(listGet, (m)=> this.#onListGet(m)),\n      this.pc.subscribe(itemGet, (m)=> this.#onItemGet(m)),\n      this.pc.subscribe(itemSave, (m)=> this.#onItemSave(m)),\n      this.pc.subscribe(itemDelete, (m)=> this.#onItemDelete(m)),\n    ];\n\n    // Try to prime state on connect\n    this.#refreshList();\n  }\n\n  disconnectedCallback(){ this.off?.forEach(f=>f&&f()); }\n\n  #loadOpts(){\n    // Merge attributes with <script type=\"application/json\"> contents\n    let o = {};\n    const script = this.querySelector('script[type=\"application/json\"]');\n    if (script && script.textContent?.trim()) {\n      try { o = JSON.parse(script.textContent.trim()); } catch { /* ignore */ }\n    }\n    if (this.credentials) o.credentials = this.credentials;\n    return o;\n  }\n\n  #url(path){\n    if (!path.startsWith('/')) path = '/' + path;\n    return `${this.baseUrl}${path}`;\n  }\n\n  #qs(params){\n    const p = params && typeof params === 'object' ? Object.entries(params).filter(([_,v])=> v!==undefined && v!==null) : [];\n    if (!p.length) return '';\n    const s = new URLSearchParams();\n    for (const [k,v] of p){\n      if (Array.isArray(v)) v.forEach(x=> s.append(k, String(x)));\n      else s.append(k, String(v));\n    }\n    return `?${s.toString()}`;\n  }\n\n  async #fetchJson(url, { method = 'GET', body } = {}){\n    const init = Object.assign({ method }, this.opts);\n    init.headers = Object.assign({ 'Content-Type': 'application/json' }, this.opts?.headers || {});\n    if (body !== undefined) init.body = typeof body === 'string' ? body : JSON.stringify(body);\n    const res = await fetch(url, init);\n    const text = await res.text();\n    let json = null;\n    try { json = text ? JSON.parse(text) : null; } catch { /* leave as text */ }\n    if (!res.ok) {\n      const err = { status: res.status, statusText: res.statusText, body: json ?? text };\n      throw err;\n    }\n    return json;\n  }\n\n  #publishListState(items){\n    this.pc.publish({ topic: `${this.resource}.list.state`, data: { items: Array.isArray(items) ? items : [] }, retain: true });\n  }\n\n  #publishItemState(item, opts={}){\n    try {\n      const id = (item && typeof item==='object') ? (item[this.key] ?? item.id) : item;\n      if (id==null) return;\n      if (opts && opts.deleted) {\n        this.pc.publish({ topic: `${this.resource}.item.state.${id}`, data: { id, deleted: true } });\n      } else {\n        this.pc.publish({ topic: `${this.resource}.item.state.${id}`, data: { item }, retain: true });\n      }\n    } catch {}\n  }\n\n  async #refreshList(params){\n    try {\n      const url = this.#url(this.listPath) + this.#qs(params);\n      const data = await this.#fetchJson(url, { method: 'GET' });\n      const items = Array.isArray(data) ? data : (data?.items || data?.data || []);\n      this.#publishListState(items);\n      return items;\n    } catch (e) {\n      this.#publishListState([]);\n      return [];\n    }\n  }\n\n  async #onListGet(m){\n    const items = await this.#refreshList(m?.data);\n    if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: true, items } });\n  }\n\n  async #onItemGet(m){\n    const id = m?.data?.[this.key] ?? m?.data?.id ?? m?.data;\n    const url = this.#url(this.itemPath.replace(':id', encodeURIComponent(String(id))));\n    try {\n      const item = await this.#fetchJson(url, { method: 'GET' });\n      // Publish retained per-item snapshot for live consumers\n      this.#publishItemState(item);\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: true, item } });\n    } catch (err) {\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: false, error: err } });\n    }\n  }\n\n  async #onItemSave(m){\n    let item = m?.data?.item ?? m?.data;\n    if (!item || typeof item !== 'object') item = {};\n    const hasId = !!item[this.key];\n    const method = hasId ? (this.updateMethod || 'PUT') : 'POST';\n    const url = hasId\n      ? this.#url(this.itemPath.replace(':id', encodeURIComponent(String(item[this.key]))))\n      : this.#url(this.listPath);\n    try {\n      const saved = await this.#fetchJson(url, { method, body: item });\n      // Ensure the id is present in the returned item\n      const out = Object.assign({}, item, saved || {});\n      if (!out[this.key] && item[this.key]) out[this.key] = item[this.key];\n      // Publish retained per-item snapshot for live consumers\n      this.#publishItemState(out);\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: true, item: out } });\n    } catch (err) {\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: false, error: err } });\n    }\n    // Keep list state fresh\n    await this.#refreshList();\n  }\n\n  async #onItemDelete(m){\n    const id = m?.data?.[this.key] ?? m?.data?.id ?? m?.data;\n    const url = this.#url(this.itemPath.replace(':id', encodeURIComponent(String(id))));\n    try {\n      await this.#fetchJson(url, { method: 'DELETE' });\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: true, id } });\n    } catch (err) {\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: false, error: err, id } });\n    }\n    // Publish a non-retained deletion notification for live consumers\n    this.#publishItemState(id, { deleted: true });\n    await this.#refreshList();\n  }\n}\n\ncustomElements.define('pan-data-connector', PanDataConnector);\nexport default PanDataConnector;\n"],
  "mappings": "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",
  "names": []
}
