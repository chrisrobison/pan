{
  "version": 3,
  "sources": ["../../pan/components/pan-date-picker.mjs"],
  "sourcesContent": ["// <pan-date-picker> \u2014 Date picker with calendar and PAN integration\n// Attributes:\n//   - value: Selected date (YYYY-MM-DD format)\n//   - format: Display format (default: YYYY-MM-DD)\n//   - min: Minimum date\n//   - max: Maximum date\n//   - topic: Topic prefix for events\n//   - placeholder: Input placeholder\n//\n// Topics:\n//   - Publishes: {topic}.change { date, formatted }\n//   - Subscribes: {topic}.setValue { date }\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class PanDatePicker extends HTMLElement {\n  static get observedAttributes() {\n    return ['value', 'format', 'min', 'max', 'topic', 'placeholder'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.pc = new PanClient(this);\n    this.isOpen = false;\n    this.currentMonth = new Date();\n    this.selectedDate = null;\n  }\n\n  connectedCallback() {\n    if (this.value) {\n      this.selectedDate = new Date(this.value);\n      this.currentMonth = new Date(this.selectedDate);\n    }\n    this.render();\n    this.setupTopics();\n    this.setupEvents();\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    if (name === 'value' && newVal && !this.isOpen) {\n      this.selectedDate = new Date(newVal);\n      this.currentMonth = new Date(this.selectedDate);\n    }\n    if (this.isConnected) this.render();\n  }\n\n  get value() { return this.getAttribute('value') || ''; }\n  set value(val) { this.setAttribute('value', val); }\n  get format() { return this.getAttribute('format') || 'YYYY-MM-DD'; }\n  get min() { return this.getAttribute('min') ? new Date(this.getAttribute('min')) : null; }\n  get max() { return this.getAttribute('max') ? new Date(this.getAttribute('max')) : null; }\n  get topic() { return this.getAttribute('topic') || 'datepicker'; }\n  get placeholder() { return this.getAttribute('placeholder') || 'Select date'; }\n\n  setupTopics() {\n    this.pc.subscribe(`${this.topic}.setValue`, (msg) => {\n      if (msg.data.date) {\n        this.selectDate(new Date(msg.data.date));\n      }\n    });\n  }\n\n  setupEvents() {\n    const input = this.shadowRoot.querySelector('.date-input');\n    const calendar = this.shadowRoot.querySelector('.calendar');\n    const prevBtn = this.shadowRoot.querySelector('.prev-month');\n    const nextBtn = this.shadowRoot.querySelector('.next-month');\n    const todayBtn = this.shadowRoot.querySelector('.today-btn');\n    const clearBtn = this.shadowRoot.querySelector('.clear-btn');\n\n    if (input) {\n      input.addEventListener('click', () => this.toggleCalendar());\n      input.addEventListener('focus', () => this.openCalendar());\n    }\n\n    if (prevBtn) {\n      prevBtn.addEventListener('click', () => this.changeMonth(-1));\n    }\n\n    if (nextBtn) {\n      nextBtn.addEventListener('click', () => this.changeMonth(1));\n    }\n\n    if (todayBtn) {\n      todayBtn.addEventListener('click', () => this.selectDate(new Date()));\n    }\n\n    if (clearBtn) {\n      clearBtn.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.selectDate(null);\n      });\n    }\n\n    // Day cells\n    this.shadowRoot.querySelectorAll('.day-cell[data-date]').forEach(cell => {\n      cell.addEventListener('click', () => {\n        const date = new Date(cell.dataset.date);\n        this.selectDate(date);\n      });\n    });\n\n    // Close on outside click\n    this.handleOutsideClick = (e) => {\n      if (!this.contains(e.target) && this.isOpen) {\n        this.closeCalendar();\n      }\n    };\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('click', this.handleOutsideClick);\n  }\n\n  toggleCalendar() {\n    this.isOpen ? this.closeCalendar() : this.openCalendar();\n  }\n\n  openCalendar() {\n    this.isOpen = true;\n    const calendar = this.shadowRoot.querySelector('.calendar');\n    if (calendar) calendar.classList.add('active');\n  }\n\n  closeCalendar() {\n    this.isOpen = false;\n    const calendar = this.shadowRoot.querySelector('.calendar');\n    if (calendar) calendar.classList.remove('active');\n  }\n\n  changeMonth(delta) {\n    this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + delta, 1);\n    this.renderCalendar();\n  }\n\n  selectDate(date) {\n    this.selectedDate = date;\n    if (date) {\n      const isoDate = this.toISODate(date);\n      this.value = isoDate;\n\n      this.pc.publish({\n        topic: `${this.topic}.change`,\n        data: {\n          date: isoDate,\n          formatted: this.formatDate(date)\n        }\n      });\n    } else {\n      this.value = '';\n      this.pc.publish({\n        topic: `${this.topic}.change`,\n        data: { date: null, formatted: '' }\n      });\n    }\n\n    this.closeCalendar();\n    this.render();\n  }\n\n  toISODate(date) {\n    return date.toISOString().split('T')[0];\n  }\n\n  formatDate(date) {\n    if (!date) return '';\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n\n    return this.format\n      .replace('YYYY', year)\n      .replace('MM', month)\n      .replace('DD', day)\n      .replace('M', date.getMonth() + 1)\n      .replace('D', date.getDate());\n  }\n\n  isDateDisabled(date) {\n    if (this.min && date < this.min) return true;\n    if (this.max && date > this.max) return true;\n    return false;\n  }\n\n  getDaysInMonth(year, month) {\n    return new Date(year, month + 1, 0).getDate();\n  }\n\n  getFirstDayOfMonth(year, month) {\n    return new Date(year, month, 1).getDay();\n  }\n\n  renderCalendar() {\n    const year = this.currentMonth.getFullYear();\n    const month = this.currentMonth.getMonth();\n    const daysInMonth = this.getDaysInMonth(year, month);\n    const firstDay = this.getFirstDayOfMonth(year, month);\n\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n                       'July', 'August', 'September', 'October', 'November', 'December'];\n\n    const calendarGrid = this.shadowRoot.querySelector('.calendar-grid');\n    const monthDisplay = this.shadowRoot.querySelector('.month-display');\n\n    if (monthDisplay) {\n      monthDisplay.textContent = `${monthNames[month]} ${year}`;\n    }\n\n    if (!calendarGrid) return;\n\n    let html = '<div class=\"weekdays\">';\n    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'].forEach(day => {\n      html += `<div class=\"weekday\">${day}</div>`;\n    });\n    html += '</div><div class=\"days\">';\n\n    // Empty cells before first day\n    for (let i = 0; i < firstDay; i++) {\n      html += '<div class=\"day-cell empty\"></div>';\n    }\n\n    // Day cells\n    for (let day = 1; day <= daysInMonth; day++) {\n      const date = new Date(year, month, day);\n      const isoDate = this.toISODate(date);\n      const isSelected = this.selectedDate && this.toISODate(this.selectedDate) === isoDate;\n      const isToday = this.toISODate(new Date()) === isoDate;\n      const isDisabled = this.isDateDisabled(date);\n\n      let classes = 'day-cell';\n      if (isSelected) classes += ' selected';\n      if (isToday) classes += ' today';\n      if (isDisabled) classes += ' disabled';\n\n      html += `<div class=\"${classes}\" data-date=\"${isoDate}\">${day}</div>`;\n    }\n\n    html += '</div>';\n    calendarGrid.innerHTML = html;\n\n    // Re-attach events for day cells\n    setTimeout(() => {\n      this.shadowRoot.querySelectorAll('.day-cell[data-date]').forEach(cell => {\n        cell.addEventListener('click', () => {\n          const date = new Date(cell.dataset.date);\n          if (!this.isDateDisabled(date)) {\n            this.selectDate(date);\n          }\n        });\n      });\n    }, 0);\n  }\n\n  render() {\n    const displayValue = this.selectedDate ? this.formatDate(this.selectedDate) : '';\n\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          position: relative;\n        }\n\n        .date-input-wrapper {\n          position: relative;\n        }\n\n        .date-input {\n          width: 100%;\n          padding: 0.625rem 2.5rem 0.625rem 0.75rem;\n          border: 1px solid var(--date-border, #e2e8f0);\n          border-radius: 0.5rem;\n          font-family: inherit;\n          font-size: 0.95rem;\n          background: var(--date-bg, #ffffff);\n          color: var(--date-color, #1e293b);\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n\n        .date-input:focus {\n          outline: none;\n          border-color: var(--date-focus-border, #6366f1);\n          box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n        }\n\n        .date-input.empty {\n          color: var(--date-placeholder-color, #94a3b8);\n        }\n\n        .input-icons {\n          position: absolute;\n          right: 0.75rem;\n          top: 50%;\n          transform: translateY(-50%);\n          display: flex;\n          gap: 0.25rem;\n        }\n\n        .icon-btn {\n          display: flex;\n          align-items: center;\n          padding: 0.25rem;\n          border: none;\n          background: transparent;\n          cursor: pointer;\n          color: var(--date-icon-color, #64748b);\n          font-size: 0.875rem;\n          transition: color 0.2s;\n        }\n\n        .icon-btn:hover {\n          color: var(--date-icon-hover, #1e293b);\n        }\n\n        .calendar {\n          position: absolute;\n          top: calc(100% + 0.5rem);\n          left: 0;\n          background: var(--calendar-bg, #ffffff);\n          border: 1px solid var(--calendar-border, #e2e8f0);\n          border-radius: 0.5rem;\n          box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n          padding: 1rem;\n          z-index: 100;\n          opacity: 0;\n          visibility: hidden;\n          transform: translateY(-10px);\n          transition: all 0.2s;\n          min-width: 280px;\n        }\n\n        .calendar.active {\n          opacity: 1;\n          visibility: visible;\n          transform: translateY(0);\n        }\n\n        .calendar-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n        }\n\n        .month-display {\n          font-weight: 600;\n          color: var(--calendar-header-color, #1e293b);\n        }\n\n        .month-nav {\n          display: flex;\n          gap: 0.5rem;\n        }\n\n        .nav-btn {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 28px;\n          height: 28px;\n          border: none;\n          background: transparent;\n          border-radius: 0.375rem;\n          cursor: pointer;\n          color: var(--calendar-nav-color, #64748b);\n          transition: all 0.2s;\n        }\n\n        .nav-btn:hover {\n          background: var(--calendar-nav-hover, #f1f5f9);\n          color: var(--calendar-nav-hover-color, #1e293b);\n        }\n\n        .weekdays {\n          display: grid;\n          grid-template-columns: repeat(7, 1fr);\n          gap: 0.25rem;\n          margin-bottom: 0.5rem;\n        }\n\n        .weekday {\n          text-align: center;\n          font-size: 0.75rem;\n          font-weight: 600;\n          color: var(--calendar-weekday-color, #64748b);\n          padding: 0.25rem;\n        }\n\n        .days {\n          display: grid;\n          grid-template-columns: repeat(7, 1fr);\n          gap: 0.25rem;\n        }\n\n        .day-cell {\n          aspect-ratio: 1;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 0.375rem;\n          cursor: pointer;\n          font-size: 0.875rem;\n          color: var(--calendar-day-color, #1e293b);\n          transition: all 0.2s;\n        }\n\n        .day-cell:not(.empty):not(.disabled):hover {\n          background: var(--calendar-day-hover, #f1f5f9);\n        }\n\n        .day-cell.empty {\n          cursor: default;\n        }\n\n        .day-cell.today {\n          font-weight: 600;\n          color: var(--calendar-today-color, #6366f1);\n        }\n\n        .day-cell.selected {\n          background: var(--calendar-selected-bg, #6366f1);\n          color: white;\n          font-weight: 600;\n        }\n\n        .day-cell.disabled {\n          color: var(--calendar-disabled-color, #cbd5e1);\n          cursor: not-allowed;\n        }\n\n        .calendar-footer {\n          display: flex;\n          gap: 0.5rem;\n          margin-top: 1rem;\n          padding-top: 1rem;\n          border-top: 1px solid var(--calendar-border, #e2e8f0);\n        }\n\n        .footer-btn {\n          flex: 1;\n          padding: 0.5rem;\n          border: 1px solid var(--calendar-border, #e2e8f0);\n          background: transparent;\n          border-radius: 0.375rem;\n          cursor: pointer;\n          font-family: inherit;\n          font-size: 0.875rem;\n          color: var(--calendar-btn-color, #64748b);\n          transition: all 0.2s;\n        }\n\n        .footer-btn:hover {\n          background: var(--calendar-btn-hover, #f1f5f9);\n          border-color: var(--calendar-btn-hover-border, #cbd5e1);\n        }\n      </style>\n\n      <div class=\"date-input-wrapper\">\n        <input\n          type=\"text\"\n          class=\"date-input ${!displayValue ? 'empty' : ''}\"\n          value=\"${displayValue}\"\n          placeholder=\"${this.placeholder}\"\n          readonly\n        >\n        <div class=\"input-icons\">\n          ${displayValue ? `<button class=\"icon-btn clear-btn\" title=\"Clear\">\u2715</button>` : ''}\n          <span class=\"icon-btn\">\uD83D\uDCC5</span>\n        </div>\n      </div>\n\n      <div class=\"calendar\">\n        <div class=\"calendar-header\">\n          <span class=\"month-display\"></span>\n          <div class=\"month-nav\">\n            <button class=\"nav-btn prev-month\">\u2039</button>\n            <button class=\"nav-btn next-month\">\u203A</button>\n          </div>\n        </div>\n        <div class=\"calendar-grid\"></div>\n        <div class=\"calendar-footer\">\n          <button class=\"footer-btn today-btn\">Today</button>\n        </div>\n      </div>\n    `;\n\n    // Render calendar\n    this.renderCalendar();\n\n    // Re-setup events after render\n    if (this.isConnected) {\n      setTimeout(() => this.setupEvents(), 0);\n    }\n  }\n}\n\ncustomElements.define('pan-date-picker', PanDatePicker);\nexport default PanDatePicker;\n"],
  "mappings": "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",
  "names": []
}
