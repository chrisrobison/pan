{
  "version": 3,
  "sources": ["../../pan/components/pan-router.mjs"],
  "sourcesContent": ["// <pan-router> \u2014 Sync URL \u2194 nav.state via PAN topics\n// Attributes:\n//   - base: base path for routing (default: '')\n//   - mode: 'hash' or 'history' (default: 'history')\n//   - auth-topic: topic to check for auth guards (default: 'auth.state')\n//\n// Topics:\n//   - Publishes: nav.state (retained) { path, query, hash, params }\n//   - Subscribes: nav.goto { path, replace?, state? }\n//   - Subscribes: nav.back, nav.forward\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class PanRouter extends HTMLElement {\n  static get observedAttributes() { return ['base', 'mode', 'auth-topic']; }\n\n  // Private fields\n  #onPopState;\n  #onLinkClick;\n\n  constructor() {\n    super();\n    this.pc = new PanClient(this);\n    this.routes = [];\n    this.guards = [];\n    this.authState = null;\n  }\n\n  connectedCallback() {\n    this.#bindNavigation();\n    this.#subscribeToTopics();\n    this.#publishCurrentState();\n  }\n\n  disconnectedCallback() {\n    window.removeEventListener('popstate', this.#onPopState);\n    window.removeEventListener('click', this.#onLinkClick);\n  }\n\n  attributeChangedCallback() {\n    if (this.isConnected) this.#publishCurrentState();\n  }\n\n  get base() { return (this.getAttribute('base') || '').trim(); }\n  get mode() { return this.getAttribute('mode') || 'history'; }\n  get authTopic() { return this.getAttribute('auth-topic') || 'auth.state'; }\n\n  // Register a route with optional guard\n  addRoute(pattern, guard) {\n    this.routes.push({ pattern, guard });\n  }\n\n  // Add a global guard function\n  addGuard(fn) {\n    if (typeof fn === 'function') this.guards.push(fn);\n  }\n\n  #bindNavigation() {\n    this.#onPopState = () => this.#publishCurrentState();\n    this.#onLinkClick = (e) => this.#handleLinkClick(e);\n    window.addEventListener('popstate', this.#onPopState);\n    window.addEventListener('click', this.#onLinkClick, true);\n  }\n\n  #subscribeToTopics() {\n    // Subscribe to navigation commands\n    this.pc.subscribe('nav.goto', (msg) => this.#handleGoto(msg));\n    this.pc.subscribe('nav.back', () => window.history.back());\n    this.pc.subscribe('nav.forward', () => window.history.forward());\n    this.pc.subscribe('nav.replace', (msg) => this.#handleGoto(msg, true));\n\n    // Subscribe to auth state for guards\n    if (this.authTopic) {\n      this.pc.subscribe(this.authTopic, (msg) => {\n        this.authState = msg.data;\n      }, { retained: true });\n    }\n  }\n\n  #handleLinkClick(e) {\n    // Intercept clicks on links for SPA navigation\n    const link = e.target.closest('a');\n    if (!link || link.target === '_blank' || link.hasAttribute('download')) return;\n\n    const href = link.getAttribute('href');\n    if (!href || href.startsWith('http://') || href.startsWith('https://') || href.startsWith('//')) return;\n\n    // Check if this is a hash link for current page\n    if (href.startsWith('#')) {\n      if (this.mode === 'hash') {\n        e.preventDefault();\n        this.#navigate(href);\n      }\n      return;\n    }\n\n    // Handle relative links\n    if (this.mode === 'history') {\n      e.preventDefault();\n      this.#navigate(href, link.hasAttribute('data-replace'));\n    }\n  }\n\n  #handleGoto(msg, replace = false) {\n    const data = msg.data || {};\n    const path = data.path || data.url || '';\n    const state = data.state || {};\n    this.#navigate(path, replace || data.replace, state);\n  }\n\n  #navigate(path, replace = false, state = {}) {\n    // Check guards before navigation\n    if (!this.#checkGuards(path)) {\n      this.pc.publish({\n        topic: 'nav.blocked',\n        data: { path, reason: 'guard' }\n      });\n      return;\n    }\n\n    const fullPath = this.#resolvePath(path);\n\n    if (this.mode === 'hash') {\n      if (replace) {\n        window.location.replace('#' + fullPath);\n      } else {\n        window.location.hash = fullPath;\n      }\n    } else {\n      if (replace) {\n        window.history.replaceState(state, '', fullPath);\n      } else {\n        window.history.pushState(state, '', fullPath);\n      }\n    }\n\n    this.#publishCurrentState();\n  }\n\n  #checkGuards(path) {\n    // Check route-specific guards\n    for (const route of this.routes) {\n      if (this.#matchRoute(path, route.pattern)) {\n        if (route.guard && !route.guard(path, this.authState)) {\n          return false;\n        }\n      }\n    }\n\n    // Check global guards\n    for (const guard of this.guards) {\n      if (!guard(path, this.authState)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  #matchRoute(path, pattern) {\n    if (pattern === '*' || path === pattern) return true;\n    if (pattern.includes('*')) {\n      const regex = new RegExp('^' + pattern.replace(/\\*/g, '.*') + '$');\n      return regex.test(path);\n    }\n    return false;\n  }\n\n  #resolvePath(path) {\n    if (path.startsWith('/')) return path;\n    const current = this.#getCurrentPath();\n    const segments = current.split('/').slice(0, -1);\n    segments.push(path);\n    return segments.join('/');\n  }\n\n  #getCurrentPath() {\n    if (this.mode === 'hash') {\n      return window.location.hash.slice(1) || '/';\n    }\n    return window.location.pathname;\n  }\n\n  #publishCurrentState() {\n    const path = this.#getCurrentPath();\n    const search = window.location.search;\n    const hash = this.mode === 'history' ? window.location.hash : '';\n\n    // Parse query params\n    const query = {};\n    const params = new URLSearchParams(search);\n    for (const [key, value] of params) {\n      query[key] = value;\n    }\n\n    // Parse path params (simple :param pattern)\n    const pathParams = this.#extractPathParams(path);\n\n    const state = {\n      path,\n      query,\n      hash: hash.slice(1),\n      params: pathParams,\n      full: window.location.href\n    };\n\n    this.pc.publish({\n      topic: 'nav.state',\n      data: state,\n      retain: true\n    });\n  }\n\n  #extractPathParams(path) {\n    // Match against registered routes to extract params\n    const params = {};\n    for (const route of this.routes) {\n      const pattern = route.pattern;\n      if (pattern.includes(':')) {\n        const regex = new RegExp(\n          '^' + pattern.replace(/:[^/]+/g, '([^/]+)') + '$'\n        );\n        const match = path.match(regex);\n        if (match) {\n          const paramNames = (pattern.match(/:[^/]+/g) || []).map(p => p.slice(1));\n          paramNames.forEach((name, i) => {\n            params[name] = match[i + 1];\n          });\n          break;\n        }\n      }\n    }\n    return params;\n  }\n}\n\ncustomElements.define('pan-router', PanRouter);\nexport default PanRouter;\n"],
  "mappings": "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",
  "names": []
}
