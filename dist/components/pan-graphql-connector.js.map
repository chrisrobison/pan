{
  "version": 3,
  "sources": ["../../pan/components/pan-graphql-connector.mjs"],
  "sourcesContent": ["// <pan-graphql-connector> \u2014 GraphQL bridge for PAN CRUD topics\n//\n// Attributes:\n// - endpoint: GraphQL HTTP endpoint URL (required)\n// - resource: logical resource name (e.g., \"users\")\n// - key: identifier field (default: \"id\")\n//\n// Child scripts:\n// - <script type=\"application/graphql\" data-op=\"list\">\u2026</script>\n// - <script type=\"application/graphql\" data-op=\"item\">\u2026</script>\n// - <script type=\"application/graphql\" data-op=\"save\">\u2026</script>\n// - <script type=\"application/graphql\" data-op=\"delete\">\u2026</script>\n// - <script type=\"application/json\" data-paths>{\"list\":\"data.users\",\"item\":\"data.user\",\"save\":\"data.saveUser\",\"delete\":\"data.deleteUser\"}</script>\n//\n// Topics:\n// - `${resource}.list.get`   -> executes list query with `variables = m.data`\n// - `${resource}.item.get`   -> executes item query with `{ id }`\n// - `${resource}.item.save`  -> executes save mutation with `{ item }`\n// - `${resource}.item.delete`-> executes delete mutation with `{ id }`\n//\n// Publishes retained `${resource}.list.state` and per-item `${resource}.item.state.<id>` on successful operations.\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class PanGraphQLConnector extends HTMLElement {\n  constructor(){ super(); this.pc = new PanClient(this); this._offs=[]; this.paths={}; this.ops={}; }\n  static get observedAttributes(){ return ['resource','endpoint','key']; }\n  connectedCallback(){ this.#init(); }\n  disconnectedCallback(){ this._offs.forEach(f=>f&&f()); this._offs=[]; }\n  attributeChangedCallback(){ this.#init(); }\n\n  get resource(){ return (this.getAttribute('resource')||'items').trim(); }\n  get endpoint(){ return (this.getAttribute('endpoint')||'').trim(); }\n  get key(){ return (this.getAttribute('key')||'id').trim(); }\n\n  #init(){\n    this._offs.forEach(f=>f&&f()); this._offs=[]; this.#loadScripts();\n    const r = this.resource;\n    this._offs.push(this.pc.subscribe(`${r}.list.get`, (m)=> this.#onListGet(m)));\n    this._offs.push(this.pc.subscribe(`${r}.item.get`, (m)=> this.#onItemGet(m)));\n    this._offs.push(this.pc.subscribe(`${r}.item.save`, (m)=> this.#onItemSave(m)));\n    this._offs.push(this.pc.subscribe(`${r}.item.delete`, (m)=> this.#onItemDelete(m)));\n  }\n\n  #loadScripts(){\n    this.ops = {};\n    this.paths = {};\n    this.querySelectorAll('script[type=\"application/graphql\"]').forEach(s=>{\n      const op = (s.getAttribute('data-op')||'').trim(); if (!op) return;\n      this.ops[op] = s.textContent || '';\n    });\n    const pathsNode = this.querySelector('script[type=\"application/json\"][data-paths]');\n    if (pathsNode && pathsNode.textContent?.trim()) { try { this.paths = JSON.parse(pathsNode.textContent.trim()); } catch {} }\n  }\n\n  async #fetchGQL(query, variables){\n    if (!this.endpoint) throw new Error('Missing endpoint');\n    const res = await fetch(this.endpoint, { method:'POST', headers:{ 'Content-Type':'application/json' }, body: JSON.stringify({ query, variables }) });\n    const json = await res.json();\n    if (json.errors && json.errors.length) throw new Error(json.errors.map(e=>e.message).join('; '));\n    return json;\n  }\n\n  #path(obj, path){ if (!path) return obj; const parts = String(path).split('.'); let cur = obj; for (const p of parts){ if (cur==null) return undefined; cur = cur[p]; } return cur; }\n\n  #pubList(items){ this.pc.publish({ topic: `${this.resource}.list.state`, data: { items: Array.isArray(items)? items: [] }, retain: true }); }\n  #pubItem(item, opts={}){\n    try{\n      const id = (item && typeof item==='object') ? (item[this.key] ?? item.id) : item;\n      if (id==null) return;\n      if (opts.deleted) this.pc.publish({ topic: `${this.resource}.item.state.${id}`, data:{ id, deleted:true } });\n      else this.pc.publish({ topic: `${this.resource}.item.state.${id}`, data:{ item }, retain:true });\n    } catch{}\n  }\n\n  async #onListGet(m){\n    try{\n      const q = this.ops.list; if (!q) throw new Error('Missing list GraphQL');\n      const json = await this.#fetchGQL(q, m?.data||{});\n      const items = this.#path(json, this.paths.list) || [];\n      this.#pubList(items);\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok:true, items } });\n    } catch (err){\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok:false, error:String(err&&err.message||err) } });\n      this.#pubList([]);\n    }\n  }\n\n  async #onItemGet(m){\n    try{\n      const q = this.ops.item; if (!q) throw new Error('Missing item GraphQL');\n      const vars = { id: m?.data?.[this.key] ?? m?.data?.id ?? m?.data };\n      const json = await this.#fetchGQL(q, vars);\n      const item = this.#path(json, this.paths.item) || null;\n      if (item) this.#pubItem(item);\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok: !!item, item } });\n    } catch (err){ if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok:false, error:String(err&&err.message||err) } }); }\n  }\n\n  async #onItemSave(m){\n    try{\n      const q = this.ops.save; if (!q) throw new Error('Missing save GraphQL');\n      const item = m?.data?.item ?? m?.data ?? {};\n      const id = item?.[this.key] ?? item?.id;\n      const vars = Object.assign({ item }, (id!=null ? { id } : {}));\n      const json = await this.#fetchGQL(q, vars);\n      const saved = this.#path(json, this.paths.save) || item;\n      this.#pubItem(saved);\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok:true, item: saved } });\n      // refresh list\n      this.pc.publish({ topic: `${this.resource}.list.get`, data: {} });\n    } catch (err){ if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok:false, error:String(err&&err.message||err) } }); }\n  }\n\n  async #onItemDelete(m){\n    try{\n      const q = this.ops.delete; if (!q) throw new Error('Missing delete GraphQL');\n      const id = m?.data?.[this.key] ?? m?.data?.id ?? m?.data;\n      const json = await this.#fetchGQL(q, { id });\n      const ok = !!this.#path(json, this.paths.delete);\n      if (ok) this.#pubItem(id, { deleted:true });\n      if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok, id } });\n      this.pc.publish({ topic: `${this.resource}.list.get`, data: {} });\n    } catch (err){ if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok:false, error:String(err&&err.message||err) } }); }\n  }\n}\n\ncustomElements.define('pan-graphql-connector', PanGraphQLConnector);\nexport default PanGraphQLConnector;\n"],
  "mappings": "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",
  "names": []
}
