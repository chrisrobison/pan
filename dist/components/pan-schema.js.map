{
  "version": 3,
  "sources": ["../../pan/components/pan-schema.mjs"],
  "sourcesContent": ["// <pan-schema> \u2014 Publishes JSON Schema for a resource on the PAN bus\n//\n// Attributes:\n// - resource: logical resource name (e.g., \"users\")\n// - src: optional URL to fetch JSON Schema from\n//\n// Behavior:\n// - On connect, loads schema from `src` or from a child <script type=\"application/json\">.\n// - Publishes retained `${resource}.schema.state` with `{ schema }`.\n// - Replies to `${resource}.schema.get` with `{ ok, schema }`.\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class PanSchema extends HTMLElement {\n  static get observedAttributes(){ return ['resource','src']; }\n  constructor(){ super(); this.pc = new PanClient(this); this.schema = null; this._offs = []; }\n\n  connectedCallback(){ this.#init(); }\n  disconnectedCallback(){ this._offs.forEach(f=>f&&f()); this._offs=[]; }\n  attributeChangedCallback(){ this.#init(); }\n\n  get resource(){ return (this.getAttribute('resource')||'items').trim(); }\n  get src(){ return (this.getAttribute('src')||'').trim(); }\n\n  async #init(){\n    this._offs.forEach(f=>f&&f()); this._offs=[];\n    // Serve schema get\n    this._offs.push(this.pc.subscribe(`${this.resource}.schema.get`, (m)=>{\n      this.#ensure().then(()=>{\n        const ok = !!this.schema;\n        if (m?.replyTo) this.pc.publish({ topic: m.replyTo, correlationId: m.correlationId, data: { ok, schema: this.schema } });\n        if (ok) this.#publish();\n      });\n    }));\n    await this.#ensure();\n    this.#publish();\n  }\n\n  async #ensure(){\n    if (this.schema) return;\n    if (this.src) {\n      try {\n        const res = await fetch(this.src, { credentials: 'same-origin' });\n        const json = await res.json();\n        this.schema = json || null;\n      } catch {}\n    }\n    if (!this.schema) {\n      const script = this.querySelector('script[type=\"application/json\"]');\n      if (script && script.textContent?.trim()) {\n        try { this.schema = JSON.parse(script.textContent.trim()); } catch {}\n      }\n    }\n  }\n\n  #publish(){\n    if (!this.schema) return;\n    this.pc.publish({ topic: `${this.resource}.schema.state`, data: { schema: this.schema }, retain: true });\n  }\n}\n\ncustomElements.define('pan-schema', PanSchema);\nexport default PanSchema;\n\n"],
  "mappings": "AAWA,SAAS,iBAAiB;AAEnB,MAAM,kBAAkB,YAAY;AAAA,EACzC,WAAW,qBAAoB;AAAE,WAAO,CAAC,YAAW,KAAK;AAAA,EAAG;AAAA,EAC5D,cAAa;AAAE,UAAM;AAAG,SAAK,KAAK,IAAI,UAAU,IAAI;AAAG,SAAK,SAAS;AAAM,SAAK,QAAQ,CAAC;AAAA,EAAG;AAAA,EAE5F,oBAAmB;AAAE,SAAK,MAAM;AAAA,EAAG;AAAA,EACnC,uBAAsB;AAAE,SAAK,MAAM,QAAQ,OAAG,KAAG,EAAE,CAAC;AAAG,SAAK,QAAM,CAAC;AAAA,EAAG;AAAA,EACtE,2BAA0B;AAAE,SAAK,MAAM;AAAA,EAAG;AAAA,EAE1C,IAAI,WAAU;AAAE,YAAQ,KAAK,aAAa,UAAU,KAAG,SAAS,KAAK;AAAA,EAAG;AAAA,EACxE,IAAI,MAAK;AAAE,YAAQ,KAAK,aAAa,KAAK,KAAG,IAAI,KAAK;AAAA,EAAG;AAAA,EAEzD,MAAM,QAAO;AACX,SAAK,MAAM,QAAQ,OAAG,KAAG,EAAE,CAAC;AAAG,SAAK,QAAM,CAAC;AAE3C,SAAK,MAAM,KAAK,KAAK,GAAG,UAAU,GAAG,KAAK,QAAQ,eAAe,CAAC,MAAI;AACpE,WAAK,QAAQ,EAAE,KAAK,MAAI;AACtB,cAAM,KAAK,CAAC,CAAC,KAAK;AAClB,YAAI,GAAG,QAAS,MAAK,GAAG,QAAQ,EAAE,OAAO,EAAE,SAAS,eAAe,EAAE,eAAe,MAAM,EAAE,IAAI,QAAQ,KAAK,OAAO,EAAE,CAAC;AACvH,YAAI,GAAI,MAAK,SAAS;AAAA,MACxB,CAAC;AAAA,IACH,CAAC,CAAC;AACF,UAAM,KAAK,QAAQ;AACnB,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,MAAM,UAAS;AACb,QAAI,KAAK,OAAQ;AACjB,QAAI,KAAK,KAAK;AACZ,UAAI;AACF,cAAM,MAAM,MAAM,MAAM,KAAK,KAAK,EAAE,aAAa,cAAc,CAAC;AAChE,cAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,aAAK,SAAS,QAAQ;AAAA,MACxB,QAAQ;AAAA,MAAC;AAAA,IACX;AACA,QAAI,CAAC,KAAK,QAAQ;AAChB,YAAM,SAAS,KAAK,cAAc,iCAAiC;AACnE,UAAI,UAAU,OAAO,aAAa,KAAK,GAAG;AACxC,YAAI;AAAE,eAAK,SAAS,KAAK,MAAM,OAAO,YAAY,KAAK,CAAC;AAAA,QAAG,QAAQ;AAAA,QAAC;AAAA,MACtE;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAU;AACR,QAAI,CAAC,KAAK,OAAQ;AAClB,SAAK,GAAG,QAAQ,EAAE,OAAO,GAAG,KAAK,QAAQ,iBAAiB,MAAM,EAAE,QAAQ,KAAK,OAAO,GAAG,QAAQ,KAAK,CAAC;AAAA,EACzG;AACF;AAEA,eAAe,OAAO,cAAc,SAAS;AAC7C,IAAO,qBAAQ;",
  "names": []
}
