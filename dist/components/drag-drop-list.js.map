{
  "version": 3,
  "sources": ["../../pan/components/drag-drop-list.mjs"],
  "sourcesContent": ["// <drag-drop-list> \u2014 Draggable list with reordering and PAN integration\n// Attributes:\n//   - topic: Topic prefix for events\n//   - items: JSON array of items with { id, content } structure\n//   - disabled: Disable drag functionality\n//   - handle: CSS selector for drag handle (default: entire item)\n//\n// Topics:\n//   - Publishes: {topic}.reorder { items, from, to }\n//   - Publishes: {topic}.drop { item, index }\n//   - Subscribes: {topic}.setItems { items }\n//   - Subscribes: {topic}.addItem { item, index? }\n//   - Subscribes: {topic}.removeItem { id }\n//\n// Slots:\n//   - item-{id}: Custom content for specific item\n//   - default: Used as template for items\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class DragDropList extends HTMLElement {\n  static get observedAttributes() {\n    return ['topic', 'items', 'disabled', 'handle'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this.pc = new PanClient(this);\n    this.items = [];\n    this.draggedElement = null;\n    this.draggedIndex = null;\n  }\n\n  connectedCallback() {\n    if (this.getAttribute('items')) {\n      try {\n        this.items = JSON.parse(this.getAttribute('items'));\n      } catch (e) {\n        console.error('Invalid items JSON:', e);\n      }\n    }\n    this.render();\n    this.setupTopics();\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    if (name === 'items' && newVal) {\n      try {\n        this.items = JSON.parse(newVal);\n        if (this.isConnected) this.render();\n      } catch (e) {\n        console.error('Invalid items JSON:', e);\n      }\n    } else if (this.isConnected) {\n      this.render();\n    }\n  }\n\n  get topic() { return this.getAttribute('topic') || 'list'; }\n  get disabled() { return this.hasAttribute('disabled'); }\n  get handle() { return this.getAttribute('handle') || null; }\n\n  setupTopics() {\n    this.pc.subscribe(`${this.topic}.setItems`, (msg) => {\n      if (msg.data.items) {\n        this.items = msg.data.items;\n        this.render();\n      }\n    });\n\n    this.pc.subscribe(`${this.topic}.addItem`, (msg) => {\n      if (msg.data.item) {\n        const index = msg.data.index ?? this.items.length;\n        this.items.splice(index, 0, msg.data.item);\n        this.render();\n      }\n    });\n\n    this.pc.subscribe(`${this.topic}.removeItem`, (msg) => {\n      if (msg.data.id) {\n        this.items = this.items.filter(item => item.id !== msg.data.id);\n        this.render();\n      }\n    });\n  }\n\n  setupDragEvents() {\n    const listItems = this.shadowRoot.querySelectorAll('.list-item');\n\n    listItems.forEach((item, index) => {\n      const handle = this.handle ? item.querySelector(this.handle) : item;\n\n      if (handle) {\n        handle.style.cursor = 'grab';\n        item.setAttribute('draggable', 'true');\n\n        item.addEventListener('dragstart', (e) => {\n          if (this.disabled) return;\n\n          this.draggedElement = item;\n          this.draggedIndex = index;\n          item.classList.add('dragging');\n          handle.style.cursor = 'grabbing';\n\n          e.dataTransfer.effectAllowed = 'move';\n          e.dataTransfer.setData('text/html', item.innerHTML);\n        });\n\n        item.addEventListener('dragend', (e) => {\n          item.classList.remove('dragging');\n          handle.style.cursor = 'grab';\n          this.draggedElement = null;\n          this.draggedIndex = null;\n\n          // Remove all drag-over classes\n          listItems.forEach(li => li.classList.remove('drag-over'));\n        });\n\n        item.addEventListener('dragover', (e) => {\n          if (this.disabled || !this.draggedElement) return;\n          e.preventDefault();\n\n          const afterElement = this.getDragAfterElement(e.clientY);\n          if (afterElement == null) {\n            item.parentElement.appendChild(this.draggedElement);\n          } else {\n            item.parentElement.insertBefore(this.draggedElement, afterElement);\n          }\n        });\n\n        item.addEventListener('dragenter', (e) => {\n          if (this.disabled || !this.draggedElement) return;\n          if (item !== this.draggedElement) {\n            item.classList.add('drag-over');\n          }\n        });\n\n        item.addEventListener('dragleave', (e) => {\n          item.classList.remove('drag-over');\n        });\n\n        item.addEventListener('drop', (e) => {\n          if (this.disabled) return;\n          e.preventDefault();\n\n          item.classList.remove('drag-over');\n\n          const newIndex = Array.from(listItems).indexOf(item);\n          const oldIndex = this.draggedIndex;\n\n          if (oldIndex !== newIndex && oldIndex !== null) {\n            // Update items array\n            const movedItem = this.items[oldIndex];\n            this.items.splice(oldIndex, 1);\n            this.items.splice(newIndex, 0, movedItem);\n\n            this.pc.publish({\n              topic: `${this.topic}.reorder`,\n              data: {\n                items: this.items,\n                from: oldIndex,\n                to: newIndex\n              }\n            });\n\n            this.render();\n          }\n        });\n      }\n    });\n  }\n\n  getDragAfterElement(y) {\n    const draggableElements = [...this.shadowRoot.querySelectorAll('.list-item:not(.dragging)')];\n\n    return draggableElements.reduce((closest, child) => {\n      const box = child.getBoundingClientRect();\n      const offset = y - box.top - box.height / 2;\n\n      if (offset < 0 && offset > closest.offset) {\n        return { offset: offset, element: child };\n      } else {\n        return closest;\n      }\n    }, { offset: Number.NEGATIVE_INFINITY }).element;\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n        }\n\n        .list-container {\n          display: flex;\n          flex-direction: column;\n          gap: 0.5rem;\n        }\n\n        .list-item {\n          background: var(--list-item-bg, #ffffff);\n          border: 1px solid var(--list-item-border, #e2e8f0);\n          border-radius: 0.5rem;\n          padding: 0.75rem 1rem;\n          transition: all 0.2s;\n          user-select: none;\n        }\n\n        .list-item:not([draggable]) {\n          cursor: default;\n        }\n\n        .list-item.dragging {\n          opacity: 0.5;\n          transform: scale(0.95);\n        }\n\n        .list-item.drag-over {\n          border-color: var(--list-drag-border, #6366f1);\n          background: var(--list-drag-bg, #eef2ff);\n          transform: translateY(-2px);\n        }\n\n        .list-item:not(.dragging):hover {\n          border-color: var(--list-hover-border, #cbd5e1);\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n        }\n\n        .item-content {\n          display: flex;\n          align-items: center;\n          gap: 0.75rem;\n        }\n\n        .drag-handle {\n          color: var(--list-handle-color, #94a3b8);\n          font-size: 1.25rem;\n          line-height: 1;\n        }\n\n        :host([disabled]) .list-item {\n          cursor: default !important;\n          opacity: 0.6;\n        }\n\n        .empty-state {\n          padding: 2rem;\n          text-align: center;\n          color: var(--list-empty-color, #94a3b8);\n          font-style: italic;\n        }\n      </style>\n\n      <div class=\"list-container\">\n        ${this.items.length === 0 ? `\n          <div class=\"empty-state\">\n            <slot name=\"empty\">No items to display</slot>\n          </div>\n        ` : this.items.map((item, index) => `\n          <div class=\"list-item\" data-id=\"${item.id}\" data-index=\"${index}\">\n            <div class=\"item-content\">\n              ${!this.disabled && !this.handle ? '<span class=\"drag-handle\">\u22EE\u22EE</span>' : ''}\n              <div class=\"item-body\">\n                <slot name=\"item-${item.id}\">\n                  ${item.content || item.label || item.title || JSON.stringify(item)}\n                </slot>\n              </div>\n            </div>\n          </div>\n        `).join('')}\n      </div>\n    `;\n\n    // Setup drag events after render\n    if (!this.disabled) {\n      setTimeout(() => this.setupDragEvents(), 0);\n    }\n  }\n}\n\ncustomElements.define('drag-drop-list', DragDropList);\nexport default DragDropList;\n"],
  "mappings": "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",
  "names": []
}
