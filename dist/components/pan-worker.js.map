{
  "version": 3,
  "sources": ["../../pan/components/pan-worker.mjs"],
  "sourcesContent": ["// <pan-worker> \u2014 Bridge PAN topics to a Web Worker for offloading compute/fetch.\n// For each topic pattern in `topics`, forwards PAN deliveries to the worker via postMessage.\n// The worker posts back PanMessage-like objects `{ topic, data, retain?, replyTo?, correlationId?, headers? }`,\n// which are re-published on the bus via PanClient.\n//\n// Usage:\n// <pan-worker topics=\"users.query.set users.list.get\">\n//   <script type=\"application/worker\">\n//     // Worker code (runs in worker context)\n//     let items = [];\n//     function synth(count=10000){\n//       const out = new Array(count);\n//       for (let i=0;i<count;i++){\n//         const id = `u${i+1}`; const name = `User ${String(i+1).padStart(5,'0')}`;\n//         out[i] = { id, name, email: `${name.toLowerCase().replace(/\\s+/g,'')}@example.com` };\n//       }\n//       return out;\n//     }\n//     items = synth(10000);\n//     let q = { q:'', sort:'name:asc' };\n//     function publish(){\n//       const { q:qq, sort } = q; const [key,dir] = (sort||'name:asc').split(':');\n//       let view = items;\n//       if (qq) { const s=qq.toLowerCase(); view = view.filter(it=> String(it.name).toLowerCase().includes(s) || String(it.email).toLowerCase().includes(s)); }\n//       view = view.slice().sort((a,b)=>{ const av=a[key], bv=b[key]; return (av>bv?1:av<bv?-1:0) * (dir==='desc'?-1:1); });\n//       postMessage({ topic:'users.list.state', data:{ items:view }, retain:true });\n//     }\n//     onmessage = (ev)=>{\n//       const m = ev.data || {};\n//       if (m.topic === 'users.query.set') { q = Object.assign({}, q, m.data||{}); publish(); }\n//       if (m.topic === 'users.list.get') { publish(); }\n//     };\n//   </script>\n// </pan-worker>\n\nimport { PanClient } from './pan-client.mjs';\n\nexport class PanWorker extends HTMLElement {\n  static get observedAttributes(){ return ['topics','src','worker-type']; }\n  constructor(){ super(); this.pc = new PanClient(this); this._offs = []; this._url = null; }\n\n  connectedCallback(){ this.#start(); }\n  disconnectedCallback(){ this.#stop(); }\n  attributeChangedCallback(){ this.#restart(); }\n\n  get topics(){ const t=(this.getAttribute('topics')||'').trim(); return t? t.split(/\\s+/): []; }\n  get workerType(){ return (this.getAttribute('worker-type')||'classic').toLowerCase() === 'module' ? 'module' : 'classic'; }\n\n  async #start(){\n    try {\n      if (!this.worker) await this.#initWorker();\n      this.#subscribe();\n    } catch (err) {\n      // Surface a bus error for observability\n      this.pc.publish({ topic:'pan:sys.error', data:{ code:'PAN_WORKER_INIT', message:String(err&&err.message||err) } });\n    }\n  }\n\n  #stop(){\n    this._offs.forEach(f=>f&&f()); this._offs=[];\n    if (this.worker) { this.worker.terminate(); this.worker = null; }\n    if (this._url) { try { URL.revokeObjectURL(this._url); } catch {} this._url = null; }\n  }\n\n  #restart(){ this.#stop(); this.#start(); }\n\n  async #initWorker(){\n    const src = (this.getAttribute('src')||'').trim();\n    if (src) {\n      this.worker = new Worker(src, { type: this.workerType });\n    } else {\n      const script = this.querySelector('script[type=\"application/worker\"],script[type=\"text/worker\"],script[type=\"text/plain\"]');\n      const code = script?.textContent || '';\n      const blob = new Blob([code], { type: 'text/javascript' });\n      const url = URL.createObjectURL(blob); this._url = url;\n      this.worker = new Worker(url, { type: this.workerType });\n    }\n    // Messages from worker \u2192 publish on PAN\n    this.worker.onmessage = (ev)=>{\n      const msg = ev.data;\n      if (!msg) return;\n      // Support either raw PanMessage or { kind:'publish', msg }\n      const out = (msg.topic ? msg : msg.msg);\n      if (out && out.topic) this.pc.publish(out);\n    };\n  }\n\n  #subscribe(){\n    this._offs.forEach(f=>f&&f()); this._offs=[];\n    if (!this.worker) return;\n    const forward = (m)=>{ try { this.worker.postMessage({ topic:m.topic, data:m.data, replyTo:m.replyTo, correlationId:m.correlationId, headers:m.headers }); } catch {} };\n    for (const pattern of this.topics){ this._offs.push(this.pc.subscribe(pattern, forward, { retained:true })); }\n  }\n}\n\ncustomElements.define('pan-worker', PanWorker);\nexport default PanWorker;\n\n"],
  "mappings": "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",
  "names": []
}
